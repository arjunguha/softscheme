#!fasl
(define .petit-bootstrap-id-a416b095ac4cd57103eb8091d2fd6fac (.petit-shared-object "/home/henchman/larcenytest/larceny-petit-Nightly-2017-08-06/larceny_src/lib/R6RS/larceny/r7rs/primitives.slfasl.so"))

((.petit-patch-procedure .petit-bootstrap-id-a416b095ac4cd57103eb8091d2fd6fac 0
'#(#f #( #f #f #( #(#f #f 0 src/Build/compile-standard-libraries.sch #(20 1 0) ()))
 #f #( #(#f #f 0 src/Build/compile-standard-libraries.sch #(20 1 0) ()) #values)
 #f #( #(#f #f 0 src/Build/compile-standard-libraries.sch #(20 1 0) ()) #f #( #(#f #f 0 src/Build/compile-standard-libraries.sch #(20 1 0) ()) #values)
 #values #apply)
 (larceny r7rs primitives) ((bytevector variable bytevector (0) #f (larceny PRIMITIVES)) (bytevector-append variable bytevector-append (0) #f (larceny PRIMITIVES)) (char-ready? variable char-ready? (0) #f (larceny PRIMITIVES)) (current-second variable current-second (0) #f (larceny PRIMITIVES)) (display variable display (0) #f (larceny PRIMITIVES)) (emergency-exit variable emergency-exit (0) #f (larceny PRIMITIVES)) (error-object-irritants variable error-object-irritants (0) #f (larceny PRIMITIVES)) (error-object-message variable error-object-message (0) #f (larceny PRIMITIVES)) (error-object? variable error-object? (0) #f (larceny PRIMITIVES)) (exact-integer? variable exact-integer? (0) #f (larceny PRIMITIVES)) (exit variable exit (0) #f (larceny PRIMITIVES)) (file-error? variable file-error? (0) #f (larceny PRIMITIVES)) (floor-quotient variable floor-quotient (0) #f (larceny PRIMITIVES)) (floor-remainder variable floor-remainder (0) #f (larceny PRIMITIVES)) (floor/ variable floor/ (0) #f (larceny PRIMITIVES)) (get-environment-variables variable get-environment-variables (0) #f (larceny PRIMITIVES)) (getenv variable getenv (0) #f (larceny PRIMITIVES)) (get-output-bytevector variable get-output-bytevector (0) #f (larceny PRIMITIVES)) (input-port-open? variable input-port-open? (0) #f (larceny PRIMITIVES)) (list-copy variable list-copy (0) #f (larceny PRIMITIVES)) (list-set! variable list-set! (0) #f (larceny PRIMITIVES)) (make-list variable make-list (0) #f (larceny PRIMITIVES)) (make-parameter variable make-parameter (0) #f (larceny PRIMITIVES)) (open-input-bytevector variable open-input-bytevector (0) #f (larceny PRIMITIVES)) (open-output-bytevector variable open-output-bytevector (0) #f (larceny PRIMITIVES)) (output-port-open? variable output-port-open? (0) #f (larceny PRIMITIVES)) (peek-u8 variable peek-u8 (0) #f (larceny PRIMITIVES)) (read-bytevector variable read-bytevector (0) #f (larceny PRIMITIVES)) (read-bytevector! variable read-bytevector! (0) #f (larceny PRIMITIVES)) (read-error? variable read-error? (0) #f (larceny PRIMITIVES)) (read-line variable read-line (0) #f (larceny PRIMITIVES)) (read-string variable read-string (0) #f (larceny PRIMITIVES)) (read-u8 variable read-u8 (0) #f (larceny PRIMITIVES)) (square variable square (0) #f (larceny PRIMITIVES)) (string->vector variable string->vector (0) #f (larceny PRIMITIVES)) (string-copy! variable string-copy! (0) #f (larceny PRIMITIVES)) (string-fill! variable string-fill! (0) #f (larceny PRIMITIVES)) (string-map variable string-map (0) #f (larceny PRIMITIVES)) (truncate-quotient variable truncate-quotient (0) #f (larceny PRIMITIVES)) (truncate-remainder variable truncate-remainder (0) #f (larceny PRIMITIVES)) (truncate/ variable truncate/ (0) #f (larceny PRIMITIVES)) (u8-ready? variable u8-ready? (0) #f (larceny PRIMITIVES)) (vector->string variable vector->string (0) #f (larceny PRIMITIVES)) (vector-append variable vector-append (0) #f (larceny PRIMITIVES)) (vector-copy variable vector-copy (0) #f (larceny PRIMITIVES)) (vector-copy! variable vector-copy! (0) #f (larceny PRIMITIVES)) (write variable write (0) #f (larceny PRIMITIVES)) (write-bytevector variable write-bytevector (0) #f (larceny PRIMITIVES)) (write-shared variable write-shared (0) #f (larceny PRIMITIVES)) (write-simple variable write-simple (0) #f (larceny PRIMITIVES)) (write-string variable write-string (0) #f (larceny PRIMITIVES)) (write-u8 variable write-u8 (0) #f (larceny PRIMITIVES))) |\x0;build~1pxGHH~3692| #ex:make-library #ex:register-library! #values)
 #f)
))
