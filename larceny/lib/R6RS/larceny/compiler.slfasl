#!fasl
(define .petit-bootstrap-id-c068a89e0c39c7630a59b5b552f22674 (.petit-shared-object "/home/henchman/larcenytest/larceny-petit-Nightly-2017-08-06/larceny_src/lib/R6RS/larceny/compiler.slfasl.so"))

((.petit-patch-procedure .petit-bootstrap-id-c068a89e0c39c7630a59b5b552f22674 0
'#(#f #( #f #f #( #(#f #f 0 src/Build/compile-standard-libraries.sch #(20 1 0) ()))
 #f #( #(#f #f 0 src/Build/compile-standard-libraries.sch #(20 1 0) ()) #values)
 #f #( #(#f #f 0 src/Build/compile-standard-libraries.sch #(20 1 0) ()) #f #( #(#f #f 0 src/Build/compile-standard-libraries.sch #(20 1 0) ()) #values)
 #values #apply)
 (larceny compiler) ((load variable load-r6rs-library-or-program (0) #f (larceny PRIMITIVES)) (require variable require (0) #f (larceny PRIMITIVES)) (r5rs:require variable r5rs:require (0) #f (larceny PRIMITIVES)) (current-require-path variable current-require-path (0) #f (larceny PRIMITIVES)) (current-directory variable current-directory (0) #f (larceny PRIMITIVES)) (larceny:current-declared-features variable larceny:current-declared-features (0) #f (larceny PRIMITIVES)) (compile-file variable |\x0;compile-file~1pxGHH~8299| (0) #f (larceny compile-stale)) (compile-library variable |\x0;compile-library~1pxGHH~8300| (0) #f (larceny compile-stale)) (compile-stale-libraries variable compile-stale-libraries (0) #f (larceny PRIMITIVES)) (compile-stale variable |\x0;compile-stale~1pxGHH~8302| (0) #f (larceny compile-stale)) (compile-stale-cautiously variable |\x0;compile-stale-cautiously~1pxGHH~8303| (0) #f (larceny compile-stale)) (compile-stale-regardless variable |\x0;compile-stale-regardless~1pxGHH~8304| (0) #f (larceny compile-stale)) (compile-stale-recklessly variable |\x0;compile-stale-recklessly~1pxGHH~8305| (0) #f (larceny compile-stale)) (compiler-switches variable compiler-switches (0) #f (larceny PRIMITIVES)) (compile-despite-errors variable compile-despite-errors (0) #f (larceny PRIMITIVES)) (issue-warnings variable issue-warnings (0) #f (larceny PRIMITIVES)) (include-procedure-names variable include-procedure-names (0) #f (larceny PRIMITIVES)) (include-variable-names variable include-variable-names (0) #f (larceny PRIMITIVES)) (include-source-code variable include-source-code (0) #f (larceny PRIMITIVES)) (hygienic-literals variable hygienic-literals (0) #f (larceny PRIMITIVES)) (avoid-space-leaks variable avoid-space-leaks (0) #f (larceny PRIMITIVES)) (runtime-safety-checking variable runtime-safety-checking (0) #f (larceny PRIMITIVES)) (catch-undefined-globals variable catch-undefined-globals (0) #f (larceny PRIMITIVES)) (integrate-procedures variable integrate-procedures (0) #f (larceny PRIMITIVES)) (faster-arithmetic variable faster-arithmetic (0) #f (larceny PRIMITIVES)) (control-optimization variable control-optimization (0) #f (larceny PRIMITIVES)) (parallel-assignment-optimization variable parallel-assignment-optimization (0) #f (larceny PRIMITIVES)) (lambda-optimization variable lambda-optimization (0) #f (larceny PRIMITIVES)) (benchmark-mode variable benchmark-mode (0) #f (larceny PRIMITIVES)) (global-optimization variable global-optimization (0) #f (larceny PRIMITIVES)) (interprocedural-inlining variable interprocedural-inlining (0) #f (larceny PRIMITIVES)) (interprocedural-constant-propagation variable interprocedural-constant-propagation (0) #f (larceny PRIMITIVES)) (common-subexpression-elimination variable common-subexpression-elimination (0) #f (larceny PRIMITIVES)) (representation-inference variable representation-inference (0) #f (larceny PRIMITIVES)) (local-optimization variable local-optimization (0) #f (larceny PRIMITIVES)) (peephole-optimization variable peephole-optimization (0) #f (larceny PRIMITIVES)) (inline-allocation variable inline-allocation (0) #f (larceny PRIMITIVES)) (inline-assignment variable inline-assignment (0) #f (larceny PRIMITIVES)) (optimize-c-code variable optimize-c-code (0) #f (larceny PRIMITIVES))) (((larceny compile-stale) 0) ((err5rs load) 0) ((rnrs base) 0)) (|\x0;build~1pxGHH~8873| |\x0;build~1pxGHH~3643| |\x0;build~1pxGHH~1533|) |\x0;build~1pxGHH~8879| #ex:make-library #ex:register-library! #values)
 #f)
))
