#!fasl
(define .petit-bootstrap-id-0005bb3d4003b320db94c6b5c1022da3 (.petit-shared-object "/home/henchman/larcenytest/larceny-petit-Nightly-2017-08-06/larceny_src/lib/R6RS/rnrs/unicode.slfasl.so"))

((.petit-patch-procedure .petit-bootstrap-id-0005bb3d4003b320db94c6b5c1022da3 0
'#(#f #( #f #f #( #(#f #f 0 src/Build/compile-standard-libraries.sch #(20 1 0) ()))
 #f #( #(#f #f 0 src/Build/compile-standard-libraries.sch #(20 1 0) ()) #values)
 #f #( #(#f #f 0 src/Build/compile-standard-libraries.sch #(20 1 0) ()) #f #( #(#f #f 0 src/Build/compile-standard-libraries.sch #(20 1 0) ()) #values)
 #values #apply)
 (rnrs unicode) ((char-upcase variable char-upcase (0) #f (larceny PRIMITIVES)) (char-downcase variable char-downcase (0) #f (larceny PRIMITIVES)) (char-titlecase variable char-titlecase (0) #f (larceny PRIMITIVES)) (char-foldcase variable char-foldcase (0) #f (larceny PRIMITIVES)) (char-ci=? variable char-ci=? (0) #f (larceny PRIMITIVES)) (char-ci<? variable char-ci<? (0) #f (larceny PRIMITIVES)) (char-ci>? variable char-ci>? (0) #f (larceny PRIMITIVES)) (char-ci<=? variable char-ci<=? (0) #f (larceny PRIMITIVES)) (char-ci>=? variable char-ci>=? (0) #f (larceny PRIMITIVES)) (char-alphabetic? variable char-alphabetic? (0) #f (larceny PRIMITIVES)) (char-numeric? variable char-numeric? (0) #f (larceny PRIMITIVES)) (char-whitespace? variable char-whitespace? (0) #f (larceny PRIMITIVES)) (char-upper-case? variable char-upper-case? (0) #f (larceny PRIMITIVES)) (char-lower-case? variable char-lower-case? (0) #f (larceny PRIMITIVES)) (char-title-case? variable char-title-case? (0) #f (larceny PRIMITIVES)) (char-general-category variable char-general-category (0) #f (larceny PRIMITIVES)) (string-upcase variable string-upcase (0) #f (larceny PRIMITIVES)) (string-downcase variable string-downcase (0) #f (larceny PRIMITIVES)) (string-titlecase variable string-titlecase (0) #f (larceny PRIMITIVES)) (string-foldcase variable string-foldcase (0) #f (larceny PRIMITIVES)) (string-ci=? variable string-ci=? (0) #f (larceny PRIMITIVES)) (string-ci<? variable string-ci<? (0) #f (larceny PRIMITIVES)) (string-ci>? variable string-ci>? (0) #f (larceny PRIMITIVES)) (string-ci<=? variable string-ci<=? (0) #f (larceny PRIMITIVES)) (string-ci>=? variable string-ci>=? (0) #f (larceny PRIMITIVES)) (string-normalize-nfd variable string-normalize-nfd (0) #f (larceny PRIMITIVES)) (string-normalize-nfkd variable string-normalize-nfkd (0) #f (larceny PRIMITIVES)) (string-normalize-nfc variable string-normalize-nfc (0) #f (larceny PRIMITIVES)) (string-normalize-nfkc variable string-normalize-nfkc (0) #f (larceny PRIMITIVES))) |\x0;build~1pxGHH~9093| #ex:make-library #ex:register-library! #values)
 #f)
))
