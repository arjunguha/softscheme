#!fasl
(define .petit-bootstrap-id-f3cc8a6634a0c724ccf45f594f086ed9 (.petit-shared-object "/home/henchman/larcenytest/larceny-petit-Nightly-2017-08-06/larceny_src/lib/R7RS/scheme/set.slfasl.so"))

((.petit-patch-procedure .petit-bootstrap-id-f3cc8a6634a0c724ccf45f594f086ed9 0
'#(#f #( #f #f #( #(#f #f 0 src/Build/compile-standard-libraries.sch #(20 1 0) ()))
 #f #( #(#f #f 0 src/Build/compile-standard-libraries.sch #(20 1 0) ()) #values)
 #f #( #(#f #f 0 src/Build/compile-standard-libraries.sch #(20 1 0) ()) #f #( #(#f #f 0 src/Build/compile-standard-libraries.sch #(20 1 0) ()) #values)
 #values #apply)
 (scheme set) ((set variable |\x0;set~1pxGHH~12820| (0) #f (srfi 113 sets)) (set-unfold variable |\x0;set-unfold~1pxGHH~12823| (0) #f (srfi 113 sets)) (set? variable |\x0;set?~1pxGHH~12806| (0) #f (srfi 113 sets)) (set-contains? variable |\x0;set-contains?~1pxGHH~12826| (0) #f (srfi 113 sets)) (set-empty? variable |\x0;set-empty?~1pxGHH~12829| (0) #f (srfi 113 sets)) (set-disjoint? variable |\x0;set-disjoint?~1pxGHH~12832| (0) #f (srfi 113 sets)) (set-member variable |\x0;set-member~1pxGHH~12835| (0) #f (srfi 113 sets)) (set-element-comparator variable |\x0;set-element-comparator~1pxGHH~12837| (0) #f (srfi 113 sets)) (set-adjoin variable |\x0;set-adjoin~1pxGHH~12848| (0) #f (srfi 113 sets)) (set-adjoin! variable |\x0;set-adjoin!~1pxGHH~12846| (0) #f (srfi 113 sets)) (set-replace variable |\x0;set-replace~1pxGHH~12853| (0) #f (srfi 113 sets)) (set-replace! variable |\x0;set-replace!~1pxGHH~12851| (0) #f (srfi 113 sets)) (set-delete variable |\x0;set-delete~1pxGHH~12860| (0) #f (srfi 113 sets)) (set-delete! variable |\x0;set-delete!~1pxGHH~12856| (0) #f (srfi 113 sets)) (set-delete-all variable |\x0;set-delete-all~1pxGHH~12862| (0) #f (srfi 113 sets)) (set-delete-all! variable |\x0;set-delete-all!~1pxGHH~12858| (0) #f (srfi 113 sets)) (set-search! variable |\x0;set-search!~1pxGHH~12866| (0) #f (srfi 113 sets)) (set-size variable |\x0;set-size~1pxGHH~12869| (0) #f (srfi 113 sets)) (set-find variable |\x0;set-find~1pxGHH~12872| (0) #f (srfi 113 sets)) (set-count variable |\x0;set-count~1pxGHH~12875| (0) #f (srfi 113 sets)) (set-any? variable |\x0;set-any?~1pxGHH~12878| (0) #f (srfi 113 sets)) (set-every? variable |\x0;set-every?~1pxGHH~12881| (0) #f (srfi 113 sets)) (set-map variable |\x0;set-map~1pxGHH~12888| (0) #f (srfi 113 sets)) (set-for-each variable |\x0;set-for-each~1pxGHH~12885| (0) #f (srfi 113 sets)) (set-fold variable |\x0;set-fold~1pxGHH~12891| (0) #f (srfi 113 sets)) (set-filter variable |\x0;set-filter~1pxGHH~12894| (0) #f (srfi 113 sets)) (set-remove variable |\x0;set-remove~1pxGHH~12896| (0) #f (srfi 113 sets)) (set-partition variable |\x0;set-partition~1pxGHH~12904| (0) #f (srfi 113 sets)) (set-filter! variable |\x0;set-filter!~1pxGHH~12899| (0) #f (srfi 113 sets)) (set-remove! variable |\x0;set-remove!~1pxGHH~12901| (0) #f (srfi 113 sets)) (set-partition! variable |\x0;set-partition!~1pxGHH~12907| (0) #f (srfi 113 sets)) (set-copy variable |\x0;set-copy~1pxGHH~12817| (0) #f (srfi 113 sets)) (set->list variable |\x0;set->list~1pxGHH~12910| (0) #f (srfi 113 sets)) (list->set variable |\x0;list->set~1pxGHH~12913| (0) #f (srfi 113 sets)) (list->set! variable |\x0;list->set!~1pxGHH~12915| (0) #f (srfi 113 sets)) (set=? variable |\x0;set=?~1pxGHH~12918| (0) #f (srfi 113 sets)) (set<? variable |\x0;set<?~1pxGHH~12930| (0) #f (srfi 113 sets)) (set>? variable |\x0;set>?~1pxGHH~12926| (0) #f (srfi 113 sets)) (set<=? variable |\x0;set<=?~1pxGHH~12922| (0) #f (srfi 113 sets)) (set>=? variable |\x0;set>=?~1pxGHH~12934| (0) #f (srfi 113 sets)) (set-union variable |\x0;set-union~1pxGHH~12940| (0) #f (srfi 113 sets)) (set-intersection variable |\x0;set-intersection~1pxGHH~12947| (0) #f (srfi 113 sets)) (set-difference variable |\x0;set-difference~1pxGHH~12954| (0) #f (srfi 113 sets)) (set-xor variable |\x0;set-xor~1pxGHH~12965| (0) #f (srfi 113 sets)) (set-union! variable |\x0;set-union!~1pxGHH~12943| (0) #f (srfi 113 sets)) (set-intersection! variable |\x0;set-intersection!~1pxGHH~12950| (0) #f (srfi 113 sets)) (set-difference! variable |\x0;set-difference!~1pxGHH~12957| (0) #f (srfi 113 sets)) (set-xor! variable |\x0;set-xor!~1pxGHH~12967| (0) #f (srfi 113 sets)) (set-comparator variable |\x0;set-comparator~1pxGHH~12983| (0) #f (srfi 113 sets)) (bag variable |\x0;bag~1pxGHH~12821| (0) #f (srfi 113 sets)) (bag-unfold variable |\x0;bag-unfold~1pxGHH~12824| (0) #f (srfi 113 sets)) (bag? variable |\x0;bag?~1pxGHH~12807| (0) #f (srfi 113 sets)) (bag-contains? variable |\x0;bag-contains?~1pxGHH~12827| (0) #f (srfi 113 sets)) (bag-empty? variable |\x0;bag-empty?~1pxGHH~12830| (0) #f (srfi 113 sets)) (bag-disjoint? variable |\x0;bag-disjoint?~1pxGHH~12833| (0) #f (srfi 113 sets)) (bag-member variable |\x0;bag-member~1pxGHH~12836| (0) #f (srfi 113 sets)) (bag-element-comparator variable |\x0;bag-element-comparator~1pxGHH~12838| (0) #f (srfi 113 sets)) (bag-adjoin variable |\x0;bag-adjoin~1pxGHH~12849| (0) #f (srfi 113 sets)) (bag-adjoin! variable |\x0;bag-adjoin!~1pxGHH~12847| (0) #f (srfi 113 sets)) (bag-replace variable |\x0;bag-replace~1pxGHH~12854| (0) #f (srfi 113 sets)) (bag-replace! variable |\x0;bag-replace!~1pxGHH~12852| (0) #f (srfi 113 sets)) (bag-delete variable |\x0;bag-delete~1pxGHH~12861| (0) #f (srfi 113 sets)) (bag-delete! variable |\x0;bag-delete!~1pxGHH~12857| (0) #f (srfi 113 sets)) (bag-delete-all variable |\x0;bag-delete-all~1pxGHH~12863| (0) #f (srfi 113 sets)) (bag-delete-all! variable |\x0;bag-delete-all!~1pxGHH~12859| (0) #f (srfi 113 sets)) (bag-search! variable |\x0;bag-search!~1pxGHH~12867| (0) #f (srfi 113 sets)) (bag-size variable |\x0;bag-size~1pxGHH~12870| (0) #f (srfi 113 sets)) (bag-find variable |\x0;bag-find~1pxGHH~12873| (0) #f (srfi 113 sets)) (bag-count variable |\x0;bag-count~1pxGHH~12876| (0) #f (srfi 113 sets)) (bag-any? variable |\x0;bag-any?~1pxGHH~12879| (0) #f (srfi 113 sets)) (bag-every? variable |\x0;bag-every?~1pxGHH~12882| (0) #f (srfi 113 sets)) (bag-map variable |\x0;bag-map~1pxGHH~12889| (0) #f (srfi 113 sets)) (bag-for-each variable |\x0;bag-for-each~1pxGHH~12886| (0) #f (srfi 113 sets)) (bag-fold variable |\x0;bag-fold~1pxGHH~12892| (0) #f (srfi 113 sets)) (bag-filter variable |\x0;bag-filter~1pxGHH~12895| (0) #f (srfi 113 sets)) (bag-remove variable |\x0;bag-remove~1pxGHH~12897| (0) #f (srfi 113 sets)) (bag-partition variable |\x0;bag-partition~1pxGHH~12905| (0) #f (srfi 113 sets)) (bag-filter! variable |\x0;bag-filter!~1pxGHH~12900| (0) #f (srfi 113 sets)) (bag-remove! variable |\x0;bag-remove!~1pxGHH~12902| (0) #f (srfi 113 sets)) (bag-partition! variable |\x0;bag-partition!~1pxGHH~12908| (0) #f (srfi 113 sets)) (bag-copy variable |\x0;bag-copy~1pxGHH~12818| (0) #f (srfi 113 sets)) (bag->list variable |\x0;bag->list~1pxGHH~12911| (0) #f (srfi 113 sets)) (list->bag variable |\x0;list->bag~1pxGHH~12914| (0) #f (srfi 113 sets)) (list->bag! variable |\x0;list->bag!~1pxGHH~12916| (0) #f (srfi 113 sets)) (bag=? variable |\x0;bag=?~1pxGHH~12919| (0) #f (srfi 113 sets)) (bag<? variable |\x0;bag<?~1pxGHH~12931| (0) #f (srfi 113 sets)) (bag>? variable |\x0;bag>?~1pxGHH~12927| (0) #f (srfi 113 sets)) (bag<=? variable |\x0;bag<=?~1pxGHH~12923| (0) #f (srfi 113 sets)) (bag>=? variable |\x0;bag>=?~1pxGHH~12935| (0) #f (srfi 113 sets)) (bag-union variable |\x0;bag-union~1pxGHH~12941| (0) #f (srfi 113 sets)) (bag-intersection variable |\x0;bag-intersection~1pxGHH~12948| (0) #f (srfi 113 sets)) (bag-difference variable |\x0;bag-difference~1pxGHH~12955| (0) #f (srfi 113 sets)) (bag-xor variable |\x0;bag-xor~1pxGHH~12966| (0) #f (srfi 113 sets)) (bag-union! variable |\x0;bag-union!~1pxGHH~12944| (0) #f (srfi 113 sets)) (bag-intersection! variable |\x0;bag-intersection!~1pxGHH~12951| (0) #f (srfi 113 sets)) (bag-difference! variable |\x0;bag-difference!~1pxGHH~12958| (0) #f (srfi 113 sets)) (bag-xor! variable |\x0;bag-xor!~1pxGHH~12968| (0) #f (srfi 113 sets)) (bag-comparator variable |\x0;bag-comparator~1pxGHH~12984| (0) #f (srfi 113 sets)) (bag-sum variable |\x0;bag-sum~1pxGHH~12961| (0) #f (srfi 113 sets)) (bag-sum! variable |\x0;bag-sum!~1pxGHH~12963| (0) #f (srfi 113 sets)) (bag-product variable |\x0;bag-product~1pxGHH~12971| (0) #f (srfi 113 sets)) (bag-product! variable |\x0;bag-product!~1pxGHH~12972| (0) #f (srfi 113 sets)) (bag-unique-size variable |\x0;bag-unique-size~1pxGHH~12973| (0) #f (srfi 113 sets)) (bag-element-count variable |\x0;bag-element-count~1pxGHH~12974| (0) #f (srfi 113 sets)) (bag-for-each-unique variable |\x0;bag-for-each-unique~1pxGHH~12975| (0) #f (srfi 113 sets)) (bag-fold-unique variable |\x0;bag-fold-unique~1pxGHH~12976| (0) #f (srfi 113 sets)) (bag-increment! variable |\x0;bag-increment!~1pxGHH~12843| (0) #f (srfi 113 sets)) (bag-decrement! variable |\x0;bag-decrement!~1pxGHH~12844| (0) #f (srfi 113 sets)) (bag->set variable |\x0;bag->set~1pxGHH~12977| (0) #f (srfi 113 sets)) (set->bag variable |\x0;set->bag~1pxGHH~12978| (0) #f (srfi 113 sets)) (set->bag! variable |\x0;set->bag!~1pxGHH~12979| (0) #f (srfi 113 sets)) (bag->alist variable |\x0;bag->alist~1pxGHH~12980| (0) #f (srfi 113 sets)) (alist->bag variable |\x0;alist->bag~1pxGHH~12981| (0) #f (srfi 113 sets))) (((srfi 113 sets) 0)) (|\x0;build~1pxGHH~14136|) |\x0;build~1pxGHH~14144| #ex:make-library #ex:register-library! #values)
 #f)
))
