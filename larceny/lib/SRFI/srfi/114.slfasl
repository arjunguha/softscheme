#!fasl
(define .petit-bootstrap-id-599aa17f2548a310d966819074e97fb7 (.petit-shared-object "/home/henchman/larcenytest/larceny-petit-Nightly-2017-08-06/larceny_src/lib/SRFI/srfi/114.slfasl.so"))

((.petit-patch-procedure .petit-bootstrap-id-599aa17f2548a310d966819074e97fb7 0
'#(#f #( #f #ex:unspecified #|\x0;make-debug-comparator~1pxGHH~18356| #|\x0;check-all~1pxGHH~18355| #|\x0;check-hash-value~1pxGHH~18354| #|\x0;check-transitive-comparison~1pxGHH~18353| #|\x0;check-transitive-equality~1pxGHH~18352| #|\x0;check-asymmetric-comparison~1pxGHH~18351| #|\x0;check-symmetric-equality~1pxGHH~18350| #|\x0;check-reflexive-comparison~1pxGHH~18349| #|\x0;check-reflexive-equality~1pxGHH~18348| #|\x0;check-type-test~1pxGHH~18347| #|\x0;debug-deny~1pxGHH~18346| #|\x0;debug-assert~1pxGHH~18345| #|\x0;make-reverse-comparator~1pxGHH~18344| #|\x0;make-refining-comparator~1pxGHH~18343| #|\x0;refined-hash-function~1pxGHH~18342| #|\x0;refined-comparison-procedure~1pxGHH~18341| #|\x0;refined-equality-predicate~1pxGHH~18340| #|\x0;make-selecting-comparator~1pxGHH~18339| #|\x0;selected-hash-function~1pxGHH~18338| #|\x0;selected-comparison-procedure~1pxGHH~18337| #|\x0;selected-equality-predicate~1pxGHH~18336| #|\x0;selected-type-test~1pxGHH~18335| #|\x0;matching-comparator~1pxGHH~18334| #|\x0;equal-comparator~1pxGHH~18333| #|\x0;eqv-comparator~1pxGHH~18332| #|\x0;eq-comparator~1pxGHH~18331| #|\x0;make-improper-list-comparator~1pxGHH~18330| #|\x0;make-improper-list-hash~1pxGHH~18329| #|\x0;make-improper-list-comparison~1pxGHH~18328| #|\x0;improper-list-type~1pxGHH~18327| #|\x0;pair-hash~1pxGHH~18326| #|\x0;pair-comparator~1pxGHH~18325| #|\x0;make-pair-hash~1pxGHH~18324| #|\x0;pair-comparison~1pxGHH~18323| #|\x0;make-pair-comparison~1pxGHH~18322| #|\x0;make-cdr-comparator~1pxGHH~18321| #|\x0;make-car-comparator~1pxGHH~18320| #|\x0;bytevector-hash~1pxGHH~18319| #|\x0;bytevector-comparison~1pxGHH~18318| #|\x0;bytevector-comparator~1pxGHH~18317| #|\x0;make-bytevector-comparator~1pxGHH~18316| #|\x0;vector-hash~1pxGHH~18315| #|\x0;vector-comparison~1pxGHH~18314| #|\x0;vector-comparator~1pxGHH~18313| #|\x0;list-comparator~1pxGHH~18312| #|\x0;make-vectorwise-comparator~1pxGHH~18311| #|\x0;make-listwise-comparator~1pxGHH~18310| #|\x0;symbol-comparator~1pxGHH~18309| #|\x0;string-ci-comparator~1pxGHH~18308| #|\x0;string-comparator~1pxGHH~18307| #|\x0;make-vectorwise-hash~1pxGHH~18306| #|\x0;make-vectorwise-comparison~1pxGHH~18305| #|\x0;make-listwise-hash~1pxGHH~18304| #|\x0;make-listwise-comparison~1pxGHH~18303| #|\x0;limit~1pxGHH~18302| #|\x0;make-inexact-real-comparator~1pxGHH~18301| #|\x0;make-inexact-real-hash~1pxGHH~18300| #|\x0;make-inexact-real-comparison~1pxGHH~18299| #|\x0;nan-comparison~1pxGHH~18298| #|\x0;rounded-to~1pxGHH~18297| #|\x0;inexact-real?~1pxGHH~18296| #|\x0;exact-integer-comparator~1pxGHH~18295| #|\x0;integer-comparator~1pxGHH~18294| #|\x0;rational-comparator~1pxGHH~18293| #|\x0;real-comparator~1pxGHH~18292| #|\x0;complex-comparator~1pxGHH~18291| #|\x0;number-comparator~1pxGHH~18290| #|\x0;complex-comparison~1pxGHH~18289| #|\x0;real-comparison~1pxGHH~18288| #|\x0;symbol-comparison~1pxGHH~18287| #|\x0;symbol<?~1pxGHH~18286| #|\x0;string-ci-comparison~1pxGHH~18285| #|\x0;string-comparison~1pxGHH~18284| #|\x0;char-ci-comparator~1pxGHH~18283| #|\x0;char-ci-comparison~1pxGHH~18282| #|\x0;char-comparator~1pxGHH~18281| #|\x0;char-comparison~1pxGHH~18280| #|\x0;boolean-comparator~1pxGHH~18279| #|\x0;boolean-comparison~1pxGHH~18278| #|\x0;default-comparator~1pxGHH~18277| #|\x0;comparator-max~1pxGHH~18276| #|\x0;comparator-min~1pxGHH~18275| #|\x0;in-closed-open-interval?~1pxGHH~18274| #|\x0;in-open-closed-interval?~1pxGHH~18273| #|\x0;in-closed-interval?~1pxGHH~18272| #|\x0;in-open-interval?~1pxGHH~18271| #|\x0;make>=~1pxGHH~18270| #|\x0;make<=~1pxGHH~18269| #|\x0;make>~1pxGHH~18268| #|\x0;make<~1pxGHH~18267| #|\x0;make=~1pxGHH~18266| #|\x0;make-comparison=/>~1pxGHH~18265| #|\x0;make-comparison=/<~1pxGHH~18264| #|\x0;make-comparison>=~1pxGHH~18263| #|\x0;make-comparison<=~1pxGHH~18262| #|\x0;make-comparison>~1pxGHH~18261| #|\x0;make-comparison<~1pxGHH~18260| #|\x0;comparator-compare~1pxGHH~18259| #|\x0;comparator-equal?~1pxGHH~18258| #|\x0;undef~1pxGHH~18035| #f #( #(#f #f 0 src/Build/compile-standard-libraries.sch #(20 1 0) ()) (((|\x0;env~1pxGHH~18249| 0 1 2 3) (|\x0;env~1pxGHH~18237| 4 1 2 3) (|\x0;env~1pxGHH~18216| 5 6 7 3) (|\x0;env~1pxGHH~18204| 8 6 7 3) (|\x0;env~1pxGHH~18183| 9 10 11 3) (|\x0;env~1pxGHH~18171| 12 10 11 3) (|\x0;env~1pxGHH~18150| 13 14 15 3) (|\x0;env~1pxGHH~18138| 16 14 15 3) (|\x0;env~1pxGHH~18117| 17 18 19 3) (|\x0;env~1pxGHH~18105| 20 18 19 3) (|\x0;env~1pxGHH~18084| 21 22 23 3) (|\x0;env~1pxGHH~18072| 24 22 23 3) (|\x0;env~1pxGHH~18049| 25 26 27 3)) (27 (((x |\x0;c~1pxGHH~18037|) variable |\x0;x~1pxGHH~18039| (0) #f (srfi 114 comparators)))) (26 ()) (25 (((dummy |\x0;c~1pxGHH~18037|) . #f) ((p) . #f) ((less) . #f) ((equal) . #f) ((greater) . #f))) (24 (((dummy |\x0;c~1pxGHH~18061|) . #f) ((p) . #f) ((equal) . #f))) (23 (((x |\x0;c~1pxGHH~18061|) variable |\x0;x~1pxGHH~18063| (0) #f (srfi 114 comparators)))) (22 ()) (21 (((dummy |\x0;c~1pxGHH~18061|) . #f) ((p) . #f) ((equal) . #f) ((unequal) . #f))) (20 (((dummy |\x0;c~1pxGHH~18094|) . #f) ((p) . #f) ((less) . #f))) (19 (((x |\x0;c~1pxGHH~18094|) variable |\x0;x~1pxGHH~18096| (0) #f (srfi 114 comparators)))) (18 ()) (17 (((dummy |\x0;c~1pxGHH~18094|) . #f) ((p) . #f) ((less) . #f) ((notless) . #f))) (16 (((dummy |\x0;c~1pxGHH~18127|) . #f) ((p) . #f) ((greater) . #f))) (15 (((x |\x0;c~1pxGHH~18127|) variable |\x0;x~1pxGHH~18129| (0) #f (srfi 114 comparators)))) (14 ()) (13 (((dummy |\x0;c~1pxGHH~18127|) . #f) ((p) . #f) ((greater) . #f) ((notgreater) . #f))) (12 (((dummy |\x0;c~1pxGHH~18160|) . #f) ((p) . #f) ((notequal) . #f))) (11 (((x |\x0;c~1pxGHH~18160|) variable |\x0;x~1pxGHH~18162| (0) #f (srfi 114 comparators)))) (10 ()) (9 (((dummy |\x0;c~1pxGHH~18160|) . #f) ((p) . #f) ((notequal) . #f) ((equal) . #f))) (8 (((dummy |\x0;c~1pxGHH~18193|) . #f) ((p) . #f) ((lessequal) . #f))) (7 (((x |\x0;c~1pxGHH~18193|) variable |\x0;x~1pxGHH~18195| (0) #f (srfi 114 comparators)))) (6 ()) (5 (((dummy |\x0;c~1pxGHH~18193|) . #f) ((p) . #f) ((lessequal) . #f) ((greater) . #f))) (4 (((dummy |\x0;c~1pxGHH~18226|) . #f) ((p) . #f) ((greaterequal) . #f))) (3 (((make-debug-comparator) variable |\x0;make-debug-comparator~1pxGHH~18356| (0) #f (srfi 114 comparators)) ((check-all) variable |\x0;check-all~1pxGHH~18355| (0) #f (srfi 114 comparators)) ((check-hash-value) variable |\x0;check-hash-value~1pxGHH~18354| (0) #f (srfi 114 comparators)) ((check-transitive-comparison) variable |\x0;check-transitive-comparison~1pxGHH~18353| (0) #f (srfi 114 comparators)) ((check-transitive-equality) variable |\x0;check-transitive-equality~1pxGHH~18352| (0) #f (srfi 114 comparators)) ((check-asymmetric-comparison) variable |\x0;check-asymmetric-comparison~1pxGHH~18351| (0) #f (srfi 114 comparators)) ((check-symmetric-equality) variable |\x0;check-symmetric-equality~1pxGHH~18350| (0) #f (srfi 114 comparators)) ((check-reflexive-comparison) variable |\x0;check-reflexive-comparison~1pxGHH~18349| (0) #f (srfi 114 comparators)) ((check-reflexive-equality) variable |\x0;check-reflexive-equality~1pxGHH~18348| (0) #f (srfi 114 comparators)) ((check-type-test) variable |\x0;check-type-test~1pxGHH~18347| (0) #f (srfi 114 comparators)) ((debug-deny) variable |\x0;debug-deny~1pxGHH~18346| (0) #f (srfi 114 comparators)) ((debug-assert) variable |\x0;debug-assert~1pxGHH~18345| (0) #f (srfi 114 comparators)) ((make-reverse-comparator) variable |\x0;make-reverse-comparator~1pxGHH~18344| (0) #f (srfi 114 comparators)) ((make-refining-comparator) variable |\x0;make-refining-comparator~1pxGHH~18343| (0) #f (srfi 114 comparators)) ((refined-hash-function) variable |\x0;refined-hash-function~1pxGHH~18342| (0) #f (srfi 114 comparators)) ((refined-comparison-procedure) variable |\x0;refined-comparison-procedure~1pxGHH~18341| (0) #f (srfi 114 comparators)) ((refined-equality-predicate) variable |\x0;refined-equality-predicate~1pxGHH~18340| (0) #f (srfi 114 comparators)) ((make-selecting-comparator) variable |\x0;make-selecting-comparator~1pxGHH~18339| (0) #f (srfi 114 comparators)) ((selected-hash-function) variable |\x0;selected-hash-function~1pxGHH~18338| (0) #f (srfi 114 comparators)) ((selected-comparison-procedure) variable |\x0;selected-comparison-procedure~1pxGHH~18337| (0) #f (srfi 114 comparators)) ((selected-equality-predicate) variable |\x0;selected-equality-predicate~1pxGHH~18336| (0) #f (srfi 114 comparators)) ((selected-type-test) variable |\x0;selected-type-test~1pxGHH~18335| (0) #f (srfi 114 comparators)) ((matching-comparator) variable |\x0;matching-comparator~1pxGHH~18334| (0) #f (srfi 114 comparators)) ((equal-comparator) variable |\x0;equal-comparator~1pxGHH~18333| (0) #f (srfi 114 comparators)) ((eqv-comparator) variable |\x0;eqv-comparator~1pxGHH~18332| (0) #f (srfi 114 comparators)) ((eq-comparator) variable |\x0;eq-comparator~1pxGHH~18331| (0) #f (srfi 114 comparators)) ((make-improper-list-comparator) variable |\x0;make-improper-list-comparator~1pxGHH~18330| (0) #f (srfi 114 comparators)) ((make-improper-list-hash) variable |\x0;make-improper-list-hash~1pxGHH~18329| (0) #f (srfi 114 comparators)) ((make-improper-list-comparison) variable |\x0;make-improper-list-comparison~1pxGHH~18328| (0) #f (srfi 114 comparators)) ((improper-list-type) variable |\x0;improper-list-type~1pxGHH~18327| (0) #f (srfi 114 comparators)) ((pair-hash) variable |\x0;pair-hash~1pxGHH~18326| (0) #f (srfi 114 comparators)) ((pair-comparator) variable |\x0;pair-comparator~1pxGHH~18325| (0) #f (srfi 114 comparators)) ((make-pair-hash) variable |\x0;make-pair-hash~1pxGHH~18324| (0) #f (srfi 114 comparators)) ((pair-comparison) variable |\x0;pair-comparison~1pxGHH~18323| (0) #f (srfi 114 comparators)) ((make-pair-comparison) variable |\x0;make-pair-comparison~1pxGHH~18322| (0) #f (srfi 114 comparators)) ((make-cdr-comparator) variable |\x0;make-cdr-comparator~1pxGHH~18321| (0) #f (srfi 114 comparators)) ((make-car-comparator) variable |\x0;make-car-comparator~1pxGHH~18320| (0) #f (srfi 114 comparators)) ((bytevector-hash) variable |\x0;bytevector-hash~1pxGHH~18319| (0) #f (srfi 114 comparators)) ((bytevector-comparison) variable |\x0;bytevector-comparison~1pxGHH~18318| (0) #f (srfi 114 comparators)) ((bytevector-comparator) variable |\x0;bytevector-comparator~1pxGHH~18317| (0) #f (srfi 114 comparators)) ((make-bytevector-comparator) variable |\x0;make-bytevector-comparator~1pxGHH~18316| (0) #f (srfi 114 comparators)) ((vector-hash) variable |\x0;vector-hash~1pxGHH~18315| (0) #f (srfi 114 comparators)) ((vector-comparison) variable |\x0;vector-comparison~1pxGHH~18314| (0) #f (srfi 114 comparators)) ((vector-comparator) variable |\x0;vector-comparator~1pxGHH~18313| (0) #f (srfi 114 comparators)) ((list-comparator) variable |\x0;list-comparator~1pxGHH~18312| (0) #f (srfi 114 comparators)) ((make-vectorwise-comparator) variable |\x0;make-vectorwise-comparator~1pxGHH~18311| (0) #f (srfi 114 comparators)) ((make-listwise-comparator) variable |\x0;make-listwise-comparator~1pxGHH~18310| (0) #f (srfi 114 comparators)) ((symbol-comparator) variable |\x0;symbol-comparator~1pxGHH~18309| (0) #f (srfi 114 comparators)) ((string-ci-comparator) variable |\x0;string-ci-comparator~1pxGHH~18308| (0) #f (srfi 114 comparators)) ((string-comparator) variable |\x0;string-comparator~1pxGHH~18307| (0) #f (srfi 114 comparators)) ((make-vectorwise-hash) variable |\x0;make-vectorwise-hash~1pxGHH~18306| (0) #f (srfi 114 comparators)) ((make-vectorwise-comparison) variable |\x0;make-vectorwise-comparison~1pxGHH~18305| (0) #f (srfi 114 comparators)) ((make-listwise-hash) variable |\x0;make-listwise-hash~1pxGHH~18304| (0) #f (srfi 114 comparators)) ((make-listwise-comparison) variable |\x0;make-listwise-comparison~1pxGHH~18303| (0) #f (srfi 114 comparators)) ((limit) variable |\x0;limit~1pxGHH~18302| (0) #f (srfi 114 comparators)) ((make-inexact-real-comparator) variable |\x0;make-inexact-real-comparator~1pxGHH~18301| (0) #f (srfi 114 comparators)) ((make-inexact-real-hash) variable |\x0;make-inexact-real-hash~1pxGHH~18300| (0) #f (srfi 114 comparators)) ((make-inexact-real-comparison) variable |\x0;make-inexact-real-comparison~1pxGHH~18299| (0) #f (srfi 114 comparators)) ((nan-comparison) variable |\x0;nan-comparison~1pxGHH~18298| (0) #f (srfi 114 comparators)) ((rounded-to) variable |\x0;rounded-to~1pxGHH~18297| (0) #f (srfi 114 comparators)) ((inexact-real?) variable |\x0;inexact-real?~1pxGHH~18296| (0) #f (srfi 114 comparators)) ((exact-integer-comparator) variable |\x0;exact-integer-comparator~1pxGHH~18295| (0) #f (srfi 114 comparators)) ((integer-comparator) variable |\x0;integer-comparator~1pxGHH~18294| (0) #f (srfi 114 comparators)) ((rational-comparator) variable |\x0;rational-comparator~1pxGHH~18293| (0) #f (srfi 114 comparators)) ((real-comparator) variable |\x0;real-comparator~1pxGHH~18292| (0) #f (srfi 114 comparators)) ((complex-comparator) variable |\x0;complex-comparator~1pxGHH~18291| (0) #f (srfi 114 comparators)) ((number-comparator) variable |\x0;number-comparator~1pxGHH~18290| (0) #f (srfi 114 comparators)) ((complex-comparison) variable |\x0;complex-comparison~1pxGHH~18289| (0) #f (srfi 114 comparators)) ((real-comparison) variable |\x0;real-comparison~1pxGHH~18288| (0) #f (srfi 114 comparators)) ((symbol-comparison) variable |\x0;symbol-comparison~1pxGHH~18287| (0) #f (srfi 114 comparators)) ((symbol<?) variable |\x0;symbol<?~1pxGHH~18286| (0) #f (srfi 114 comparators)) ((string-ci-comparison) variable |\x0;string-ci-comparison~1pxGHH~18285| (0) #f (srfi 114 comparators)) ((string-comparison) variable |\x0;string-comparison~1pxGHH~18284| (0) #f (srfi 114 comparators)) ((char-ci-comparator) variable |\x0;char-ci-comparator~1pxGHH~18283| (0) #f (srfi 114 comparators)) ((char-ci-comparison) variable |\x0;char-ci-comparison~1pxGHH~18282| (0) #f (srfi 114 comparators)) ((char-comparator) variable |\x0;char-comparator~1pxGHH~18281| (0) #f (srfi 114 comparators)) ((char-comparison) variable |\x0;char-comparison~1pxGHH~18280| (0) #f (srfi 114 comparators)) ((boolean-comparator) variable |\x0;boolean-comparator~1pxGHH~18279| (0) #f (srfi 114 comparators)) ((boolean-comparison) variable |\x0;boolean-comparison~1pxGHH~18278| (0) #f (srfi 114 comparators)) ((default-comparator) variable |\x0;default-comparator~1pxGHH~18277| (0) #f (srfi 114 comparators)) ((comparator-max) variable |\x0;comparator-max~1pxGHH~18276| (0) #f (srfi 114 comparators)) ((comparator-min) variable |\x0;comparator-min~1pxGHH~18275| (0) #f (srfi 114 comparators)) ((in-closed-open-interval?) variable |\x0;in-closed-open-interval?~1pxGHH~18274| (0) #f (srfi 114 comparators)) ((in-open-closed-interval?) variable |\x0;in-open-closed-interval?~1pxGHH~18273| (0) #f (srfi 114 comparators)) ((in-closed-interval?) variable |\x0;in-closed-interval?~1pxGHH~18272| (0) #f (srfi 114 comparators)) ((in-open-interval?) variable |\x0;in-open-interval?~1pxGHH~18271| (0) #f (srfi 114 comparators)) ((make>=) variable |\x0;make>=~1pxGHH~18270| (0) #f (srfi 114 comparators)) ((make<=) variable |\x0;make<=~1pxGHH~18269| (0) #f (srfi 114 comparators)) ((make>) variable |\x0;make>~1pxGHH~18268| (0) #f (srfi 114 comparators)) ((make<) variable |\x0;make<~1pxGHH~18267| (0) #f (srfi 114 comparators)) ((make=) variable |\x0;make=~1pxGHH~18266| (0) #f (srfi 114 comparators)) ((make-comparison=/>) variable |\x0;make-comparison=/>~1pxGHH~18265| (0) #f (srfi 114 comparators)) ((make-comparison=/<) variable |\x0;make-comparison=/<~1pxGHH~18264| (0) #f (srfi 114 comparators)) ((make-comparison>=) variable |\x0;make-comparison>=~1pxGHH~18263| (0) #f (srfi 114 comparators)) ((make-comparison<=) variable |\x0;make-comparison<=~1pxGHH~18262| (0) #f (srfi 114 comparators)) ((make-comparison>) variable |\x0;make-comparison>~1pxGHH~18261| (0) #f (srfi 114 comparators)) ((make-comparison<) variable |\x0;make-comparison<~1pxGHH~18260| (0) #f (srfi 114 comparators)) ((comparator-compare) variable |\x0;comparator-compare~1pxGHH~18259| (0) #f (srfi 114 comparators)) ((comparator-equal?) variable |\x0;comparator-equal?~1pxGHH~18258| (0) #f (srfi 114 comparators)) ((if>=?) macro |\x0;if>=?~1pxGHH~18225| (0) #f (srfi 114 comparators)) ((if<=?) macro |\x0;if<=?~1pxGHH~18192| (0) #f (srfi 114 comparators)) ((if-not=?) macro |\x0;if-not=?~1pxGHH~18159| (0) #f (srfi 114 comparators)) ((if>?) macro |\x0;if>?~1pxGHH~18126| (0) #f (srfi 114 comparators)) ((if<?) macro |\x0;if<?~1pxGHH~18093| (0) #f (srfi 114 comparators)) ((if=?) macro |\x0;if=?~1pxGHH~18060| (0) #f (srfi 114 comparators)) ((if3) macro |\x0;if3~1pxGHH~18036| (0) #f (srfi 114 comparators)) ((undef) variable |\x0;undef~1pxGHH~18035| (0) #f (srfi 114 comparators)) ((zero?) variable zero? (0) #f (larceny PRIMITIVES)) ((write-u8) variable write-u8 (0) #f (larceny PRIMITIVES)) ((write-string) variable write-string (0) #f (larceny PRIMITIVES)) ((write-char) variable write-char (0) #f (larceny PRIMITIVES)) ((write-bytevector) variable write-bytevector (0) #f (larceny PRIMITIVES)) ((with-exception-handler) variable with-exception-handler (0) #f (larceny PRIMITIVES)) ((when) macro |\x0;when~1pxGHH~3846| (0) #f (rnrs control)) ((vector?) variable vector? (0) #f (larceny PRIMITIVES)) ((vector-set!) variable vector-set! (0) #f (larceny PRIMITIVES)) ((vector-ref) variable vector-ref (0) #f (larceny PRIMITIVES)) ((vector-map) variable vector-map (0) #f (larceny PRIMITIVES)) ((vector-length) variable vector-length (0) #f (larceny PRIMITIVES)) ((vector-for-each) variable vector-for-each (0) #f (larceny PRIMITIVES)) ((vector-fill!) variable vector-fill! (0) #f (larceny PRIMITIVES)) ((vector-copy!) variable vector-copy! (0) #f (larceny PRIMITIVES)) ((vector-copy) variable vector-copy (0) #f (larceny PRIMITIVES)) ((vector-append) variable vector-append (0) #f (larceny PRIMITIVES)) ((vector->string) variable vector->string (0) #f (larceny PRIMITIVES)) ((vector->list) variable vector->list (0) #f (larceny PRIMITIVES)) ((vector) variable vector (0) #f (larceny PRIMITIVES)) ((values) variable values (0) #f (larceny PRIMITIVES)) ((utf8->string) variable utf8->string (0) #f (larceny PRIMITIVES)) ((unquote-splicing) macro |\x0;unquote-splicing~1pxGHH~1283| (0) #f (core quasiquote)) ((unquote) macro |\x0;unquote~1pxGHH~1279| (0) #f (core quasiquote)) ((unless) macro |\x0;unless~1pxGHH~3865| (0) #f (rnrs control)) ((u8-ready?) variable u8-ready? (0) #f (larceny PRIMITIVES)) ((truncate/) variable truncate/ (0) #f (larceny PRIMITIVES)) ((truncate-remainder) variable truncate-remainder (0) #f (larceny PRIMITIVES)) ((truncate-quotient) variable truncate-quotient (0) #f (larceny PRIMITIVES)) ((truncate) variable truncate (0) #f (larceny PRIMITIVES)) ((textual-port?) variable textual-port? (0) #f (larceny PRIMITIVES)) ((syntax-rules) macro |\x0;syntax-rules~1pxGHH~58| (1) #f (core syntax-rules)) ((syntax-error) macro |\x0;syntax-error~1pxGHH~139| (1 0) #f (core syntax-rules)) ((symbol?) variable symbol? (0) #f (larceny PRIMITIVES)) ((symbol=?) variable symbol=? (0) #f (larceny PRIMITIVES)) ((symbol->string) variable symbol->string (0) #f (larceny PRIMITIVES)) ((substring) variable substring (0) #f (larceny PRIMITIVES)) ((string?) variable string? (0) #f (larceny PRIMITIVES)) ((string>?) variable string>? (0) #f (larceny PRIMITIVES)) ((string>=?) variable string>=? (0) #f (larceny PRIMITIVES)) ((string=?) variable string=? (0) #f (larceny PRIMITIVES)) ((string<?) variable string<? (0) #f (larceny PRIMITIVES)) ((string<=?) variable string<=? (0) #f (larceny PRIMITIVES)) ((string-set!) variable string-set! (0) #f (larceny PRIMITIVES)) ((string-ref) variable string-ref (0) #f (larceny PRIMITIVES)) ((string-map) variable string-map (0) #f (larceny PRIMITIVES)) ((string-length) variable string-length (0) #f (larceny PRIMITIVES)) ((string-for-each) variable string-for-each (0) #f (larceny PRIMITIVES)) ((string-fill!) variable string-fill! (0) #f (larceny PRIMITIVES)) ((string-copy!) variable string-copy! (0) #f (larceny PRIMITIVES)) ((string-copy) variable string-copy (0) #f (larceny PRIMITIVES)) ((string-append) variable string-append (0) #f (larceny PRIMITIVES)) ((string->vector) variable string->vector (0) #f (larceny PRIMITIVES)) ((string->utf8) variable string->utf8 (0) #f (larceny PRIMITIVES)) ((string->symbol) variable string->symbol (0) #f (larceny PRIMITIVES)) ((string->number) variable string->number (0) #f (larceny PRIMITIVES)) ((string->list) variable string->list (0) #f (larceny PRIMITIVES)) ((string) variable string (0) #f (larceny PRIMITIVES)) ((square) variable square (0) #f (larceny PRIMITIVES)) ((set-cdr!) variable set-cdr! (0) #f (larceny PRIMITIVES)) ((set-car!) variable set-car! (0) #f (larceny PRIMITIVES)) ((set!) macro set! (1 0) #f ()) ((round) variable round (0) #f (larceny PRIMITIVES)) ((reverse) variable reverse (0) #f (larceny PRIMITIVES)) ((remainder) variable remainder (0) #f (larceny PRIMITIVES)) ((real?) variable real? (0) #f (larceny PRIMITIVES)) ((read-u8) variable read-u8 (0) #f (larceny PRIMITIVES)) ((read-string) variable read-string (0) #f (larceny PRIMITIVES)) ((read-line) variable read-line (0) #f (larceny PRIMITIVES)) ((read-error?) variable read-error? (0) #f (larceny PRIMITIVES)) ((read-char) variable read-char (0) #f (larceny PRIMITIVES)) ((read-bytevector!) variable read-bytevector! (0) #f (larceny PRIMITIVES)) ((read-bytevector) variable read-bytevector (0) #f (larceny PRIMITIVES)) ((rationalize) variable rationalize (0) #f (larceny PRIMITIVES)) ((rational?) variable rational? (0) #f (larceny PRIMITIVES)) ((raise-continuable) variable raise-continuable (0) #f (larceny PRIMITIVES)) ((raise) variable raise (0) #f (larceny PRIMITIVES)) ((quotient) variable quotient (0) #f (larceny PRIMITIVES)) ((quote) macro quote (0) #f ()) ((quasiquote) macro |\x0;quasiquote~1pxGHH~850| (0) #f (core quasiquote)) ((procedure?) variable procedure? (0) #f (larceny PRIMITIVES)) ((positive?) variable positive? (0) #f (larceny PRIMITIVES)) ((port?) variable port? (0) #f (larceny PRIMITIVES)) ((peek-u8) variable peek-u8 (0) #f (larceny PRIMITIVES)) ((peek-char) variable peek-char (0) #f (larceny PRIMITIVES)) ((parameterize) macro |\x0;parameterize~1pxGHH~3600| (0) #f (larceny r7rs macros)) ((pair?) variable pair? (0) #f (larceny PRIMITIVES)) ((output-port?) variable output-port? (0) #f (larceny PRIMITIVES)) ((output-port-open?) variable output-port-open? (0) #f (larceny PRIMITIVES)) ((or) macro or (0) #f ()) ((open-output-string) variable open-output-string (0) #f (larceny PRIMITIVES)) ((open-output-bytevector) variable open-output-bytevector (0) #f (larceny PRIMITIVES)) ((open-input-string) variable open-input-string (0) #f (larceny PRIMITIVES)) ((open-input-bytevector) variable open-input-bytevector (0) #f (larceny PRIMITIVES)) ((odd?) variable odd? (0) #f (larceny PRIMITIVES)) ((numerator) variable numerator (0) #f (larceny PRIMITIVES)) ((number?) variable number? (0) #f (larceny PRIMITIVES)) ((number->string) variable number->string (0) #f (larceny PRIMITIVES)) ((null?) variable null? (0) #f (larceny PRIMITIVES)) ((not) variable not (0) #f (larceny PRIMITIVES)) ((newline) variable newline (0) #f (larceny PRIMITIVES)) ((negative?) variable negative? (0) #f (larceny PRIMITIVES)) ((modulo) variable modulo (0) #f (larceny PRIMITIVES)) ((min) variable min (0) #f (larceny PRIMITIVES)) ((memv) variable memv (0) #f (larceny PRIMITIVES)) ((memq) variable memq (0) #f (larceny PRIMITIVES)) ((member) variable |\x0;member~1pxGHH~1539| (0) #f (rnrs lists)) ((max) variable max (0) #f (larceny PRIMITIVES)) ((map) variable |\x0;map~1pxGHH~1463| (0) #f (rnrs base)) ((make-vector) variable make-vector (0) #f (larceny PRIMITIVES)) ((make-string) variable make-string (0) #f (larceny PRIMITIVES)) ((make-parameter) variable make-parameter (0) #f (larceny PRIMITIVES)) ((make-list) variable make-list (0) #f (larceny PRIMITIVES)) ((make-bytevector) variable make-bytevector (0) #f (larceny PRIMITIVES)) ((list?) variable list? (0) #f (larceny PRIMITIVES)) ((list-tail) variable list-tail (0) #f (larceny PRIMITIVES)) ((list-set!) variable list-set! (0) #f (larceny PRIMITIVES)) ((list-ref) variable list-ref (0) #f (larceny PRIMITIVES)) ((list-copy) variable list-copy (0) #f (larceny PRIMITIVES)) ((list->vector) variable list->vector (0) #f (larceny PRIMITIVES)) ((list->string) variable list->string (0) #f (larceny PRIMITIVES)) ((list) variable list (0) #f (larceny PRIMITIVES)) ((letrec-syntax) macro |\x0;letrec-syntax~1pxGHH~1507| (0) #f (rnrs base)) ((letrec*) macro |\x0;letrec*~1pxGHH~216| (0) #f (core let)) ((letrec) macro |\x0;letrec~1pxGHH~192| (0) #f (core let)) ((let-values) macro |\x0;let-values~1pxGHH~1288| (0) #f (core let-values)) ((let-syntax) macro |\x0;let-syntax~1pxGHH~1481| (0) #f (rnrs base)) ((let*-values) macro |\x0;let*-values~1pxGHH~1428| (0) #f (core let-values)) ((let*) macro |\x0;let*~1pxGHH~241| (0) #f (core derived)) ((let) macro |\x0;let~1pxGHH~144| (0) #f (core let)) ((length) variable length (0) #f (larceny PRIMITIVES)) ((lcm) variable lcm (0) #f (larceny PRIMITIVES)) ((lambda) macro lambda (0) #f ()) ((integer?) variable integer? (0) #f (larceny PRIMITIVES)) ((integer->char) variable integer->char (0) #f (larceny PRIMITIVES)) ((input-port?) variable input-port? (0) #f (larceny PRIMITIVES)) ((input-port-open?) variable input-port-open? (0) #f (larceny PRIMITIVES)) ((inexact?) variable inexact? (0) #f (larceny PRIMITIVES)) ((inexact) variable inexact (0) #f (larceny PRIMITIVES)) ((include-ci) macro include-ci (0) #f ()) ((include) macro include (0) #f ()) ((if) macro if (0) #f ()) ((guard) macro |\x0;guard~1pxGHH~1548| (0) #f (rnrs exceptions)) ((get-output-string) variable get-output-string (0) #f (larceny PRIMITIVES)) ((get-output-bytevector) variable get-output-bytevector (0) #f (larceny PRIMITIVES)) ((gcd) variable gcd (0) #f (larceny PRIMITIVES)) ((for-each) variable |\x0;for-each~1pxGHH~1464| (0) #f (rnrs base)) ((flush-output-port) variable flush-output-port (0) #f (larceny PRIMITIVES)) ((floor/) variable floor/ (0) #f (larceny PRIMITIVES)) ((floor-remainder) variable floor-remainder (0) #f (larceny PRIMITIVES)) ((floor-quotient) variable floor-quotient (0) #f (larceny PRIMITIVES)) ((floor) variable floor (0) #f (larceny PRIMITIVES)) ((file-error?) variable file-error? (0) #f (larceny PRIMITIVES)) ((features) variable |\x0;features~1pxGHH~4480| (0) #f (scheme base)) ((expt) variable expt (0) #f (larceny PRIMITIVES)) ((exact?) variable exact? (0) #f (larceny PRIMITIVES)) ((exact-integer?) variable exact-integer? (0) #f (larceny PRIMITIVES)) ((exact-integer-sqrt) variable exact-integer-sqrt (0) #f (larceny PRIMITIVES)) ((exact) variable exact (0) #f (larceny PRIMITIVES)) ((even?) variable even? (0) #f (larceny PRIMITIVES)) ((error-object?) variable error-object? (0) #f (larceny PRIMITIVES)) ((error-object-message) variable error-object-message (0) #f (larceny PRIMITIVES)) ((error-object-irritants) variable error-object-irritants (0) #f (larceny PRIMITIVES)) ((error) variable error (0) #f (larceny PRIMITIVES)) ((eqv?) variable eqv? (0) #f (larceny PRIMITIVES)) ((equal?) variable equal? (0) #f (larceny PRIMITIVES)) ((eq?) variable eq? (0) #f (larceny PRIMITIVES)) ((eof-object?) variable eof-object? (0) #f (larceny PRIMITIVES)) ((eof-object) variable eof-object (0) #f (larceny PRIMITIVES)) ((else) macro |\x0;else~1pxGHH~572| (0) #f (core derived)) ((dynamic-wind) variable dynamic-wind (0) #f (larceny PRIMITIVES)) ((do) macro |\x0;do~1pxGHH~3884| (0) #f (rnrs control)) ((denominator) variable denominator (0) #f (larceny PRIMITIVES)) ((define-values) macro |\x0;define-values~1pxGHH~3519| (0) #f (larceny r7rs macros)) ((define-syntax) macro define-syntax (0) #f ()) ((define-record-type) macro |\x0;define-record-type~1pxGHH~3336| (0) #f (larceny r7rs macros)) ((define) macro define (0) #f ()) ((current-output-port) variable current-output-port (0) #f (larceny PRIMITIVES)) ((current-input-port) variable current-input-port (0) #f (larceny PRIMITIVES)) ((current-error-port) variable current-error-port (0) #f (larceny PRIMITIVES)) ((cons) variable cons (0) #f (larceny PRIMITIVES)) ((cond-expand) macro cond-expand (0) #f ()) ((cond) macro |\x0;cond~1pxGHH~320| (0) #f (core derived)) ((complex?) variable complex? (0) #f (larceny PRIMITIVES)) ((close-port) variable close-port (0) #f (larceny PRIMITIVES)) ((close-output-port) variable close-output-port (0) #f (larceny PRIMITIVES)) ((close-input-port) variable close-input-port (0) #f (larceny PRIMITIVES)) ((char?) variable char? (0) #f (larceny PRIMITIVES)) ((char>?) variable char>? (0) #f (larceny PRIMITIVES)) ((char>=?) variable char>=? (0) #f (larceny PRIMITIVES)) ((char=?) variable char=? (0) #f (larceny PRIMITIVES)) ((char<?) variable char<? (0) #f (larceny PRIMITIVES)) ((char<=?) variable char<=? (0) #f (larceny PRIMITIVES)) ((char-ready?) variable char-ready? (0) #f (larceny PRIMITIVES)) ((char->integer) variable char->integer (0) #f (larceny PRIMITIVES)) ((ceiling) variable ceiling (0) #f (larceny PRIMITIVES)) ((cdr) variable cdr (0) #f (larceny PRIMITIVES)) ((cddr) variable cddr (0) #f (larceny PRIMITIVES)) ((cdar) variable cdar (0) #f (larceny PRIMITIVES)) ((case) macro |\x0;case~1pxGHH~435| (0) #f (core derived)) ((car) variable car (0) #f (larceny PRIMITIVES)) ((call/cc) variable call/cc (0) #f (larceny PRIMITIVES)) ((call-with-values) variable call-with-values (0) #f (larceny PRIMITIVES)) ((call-with-port) variable call-with-port (0) #f (larceny PRIMITIVES)) ((call-with-current-continuation) variable call-with-current-continuation (0) #f (larceny PRIMITIVES)) ((cadr) variable cadr (0) #f (larceny PRIMITIVES)) ((caar) variable caar (0) #f (larceny PRIMITIVES)) ((bytevector?) variable bytevector? (0) #f (larceny PRIMITIVES)) ((bytevector-u8-set!) variable bytevector-u8-set! (0) #f (larceny PRIMITIVES)) ((bytevector-u8-ref) variable bytevector-u8-ref (0) #f (larceny PRIMITIVES)) ((bytevector-length) variable bytevector-length (0) #f (larceny PRIMITIVES)) ((bytevector-copy!) variable |\x0;bytevector-copy!~1pxGHH~4479| (0) #f (scheme base)) ((bytevector-copy) variable bytevector-copy (0) #f (larceny PRIMITIVES)) ((bytevector-append) variable bytevector-append (0) #f (larceny PRIMITIVES)) ((bytevector) variable bytevector (0) #f (larceny PRIMITIVES)) ((boolean?) variable boolean? (0) #f (larceny PRIMITIVES)) ((boolean=?) variable boolean=? (0) #f (larceny PRIMITIVES)) ((binary-port?) variable binary-port? (0) #f (larceny PRIMITIVES)) ((begin) macro begin (0) #f ()) ((assv) variable assv (0) #f (larceny PRIMITIVES)) ((assq) variable assq (0) #f (larceny PRIMITIVES)) ((assoc) variable |\x0;assoc~1pxGHH~1540| (0) #f (rnrs lists)) ((apply) variable apply (0) #f (larceny PRIMITIVES)) ((append) variable append (0) #f (larceny PRIMITIVES)) ((and) macro and (0) #f ()) ((abs) variable abs (0) #f (larceny PRIMITIVES)) ((_) macro _ (1 0) #f ()) ((>=) variable >= (0) #f (larceny PRIMITIVES)) ((>) variable > (0) #f (larceny PRIMITIVES)) ((=>) macro |\x0;=>~1pxGHH~568| (0) #f (core derived)) ((=) variable = (0) #f (larceny PRIMITIVES)) ((<=) variable <= (0) #f (larceny PRIMITIVES)) ((<) variable < (0) #f (larceny PRIMITIVES)) ((/) variable / (0) #f (larceny PRIMITIVES)) ((...) macro ... (1 0) #f ()) ((-) variable - (0) #f (larceny PRIMITIVES)) ((+) variable + (0) #f (larceny PRIMITIVES)) ((*) variable * (0) #f (larceny PRIMITIVES)) ((string-upcase) variable string-upcase (0) #f (larceny PRIMITIVES)) ((string-foldcase) variable string-foldcase (0) #f (larceny PRIMITIVES)) ((string-downcase) variable string-downcase (0) #f (larceny PRIMITIVES)) ((string-ci>?) variable string-ci>? (0) #f (larceny PRIMITIVES)) ((string-ci>=?) variable string-ci>=? (0) #f (larceny PRIMITIVES)) ((string-ci=?) variable string-ci=? (0) #f (larceny PRIMITIVES)) ((string-ci<?) variable string-ci<? (0) #f (larceny PRIMITIVES)) ((string-ci<=?) variable string-ci<=? (0) #f (larceny PRIMITIVES)) ((digit-value) variable |\x0;digit-value~1pxGHH~8989| (0) #f (scheme char)) ((char-whitespace?) variable char-whitespace? (0) #f (larceny PRIMITIVES)) ((char-upper-case?) variable char-upper-case? (0) #f (larceny PRIMITIVES)) ((char-upcase) variable char-upcase (0) #f (larceny PRIMITIVES)) ((char-numeric?) variable char-numeric? (0) #f (larceny PRIMITIVES)) ((char-lower-case?) variable char-lower-case? (0) #f (larceny PRIMITIVES)) ((char-foldcase) variable char-foldcase (0) #f (larceny PRIMITIVES)) ((char-downcase) variable char-downcase (0) #f (larceny PRIMITIVES)) ((char-ci>?) variable char-ci>? (0) #f (larceny PRIMITIVES)) ((char-ci>=?) variable char-ci>=? (0) #f (larceny PRIMITIVES)) ((char-ci=?) variable char-ci=? (0) #f (larceny PRIMITIVES)) ((char-ci<?) variable char-ci<? (0) #f (larceny PRIMITIVES)) ((char-ci<=?) variable char-ci<=? (0) #f (larceny PRIMITIVES)) ((char-alphabetic?) variable char-alphabetic? (0) #f (larceny PRIMITIVES)) ((case-lambda) macro |\x0;case-lambda~1pxGHH~3944| (0) #f (rnrs control)) ((real-part) variable real-part (0) #f (larceny PRIMITIVES)) ((make-rectangular) variable make-rectangular (0) #f (larceny PRIMITIVES)) ((make-polar) variable make-polar (0) #f (larceny PRIMITIVES)) ((magnitude) variable magnitude (0) #f (larceny PRIMITIVES)) ((imag-part) variable imag-part (0) #f (larceny PRIMITIVES)) ((angle) variable angle (0) #f (larceny PRIMITIVES)) ((tan) variable tan (0) #f (larceny PRIMITIVES)) ((sqrt) variable sqrt (0) #f (larceny PRIMITIVES)) ((sin) variable sin (0) #f (larceny PRIMITIVES)) ((nan?) variable nan? (0) #f (larceny PRIMITIVES)) ((log) variable log (0) #f (larceny PRIMITIVES)) ((infinite?) variable infinite? (0) #f (larceny PRIMITIVES)) ((finite?) variable finite? (0) #f (larceny PRIMITIVES)) ((exp) variable exp (0) #f (larceny PRIMITIVES)) ((cos) variable cos (0) #f (larceny PRIMITIVES)) ((atan) variable atan (0) #f (larceny PRIMITIVES)) ((asin) variable asin (0) #f (larceny PRIMITIVES)) ((acos) variable acos (0) #f (larceny PRIMITIVES)) ((comparator-hash-function?) variable |\x0;comparator-hash-function?~1pxGHH~11495| (0) #f (srfi 128 kernel)) ((comparator-comparison-procedure?) variable |\x0;comparator-comparison-procedure?~1pxGHH~11487| (0) #f (srfi 128 kernel)) ((comparator-comparison-procedure) variable |\x0;comparator-comparison-procedure~1pxGHH~11484| (0) #f (srfi 128 kernel)) ((comparator-type-test-procedure) variable |\x0;comparator-type-test-procedure~1pxGHH~11494| (0) #f (srfi 128 kernel)) ((comparator-if<=>) macro |\x0;comparator-if<=>~1pxGHH~11617| (0) #f (srfi 128)) ((>=?) variable |\x0;>=?~1pxGHH~11725| (0) #f (srfi 128)) ((<=?) variable |\x0;<=?~1pxGHH~11724| (0) #f (srfi 128)) ((>?) variable |\x0;>?~1pxGHH~11723| (0) #f (srfi 128)) ((<?) variable |\x0;<?~1pxGHH~11722| (0) #f (srfi 128)) ((=?) variable |\x0;=?~1pxGHH~11721| (0) #f (srfi 128)) ((hash-salt) macro |\x0;hash-salt~1pxGHH~11680| (0) #f (srfi 128)) ((hash-bound) macro |\x0;hash-bound~1pxGHH~11668| (0) #f (srfi 128)) ((comparator-hash) variable |\x0;comparator-hash~1pxGHH~11715| (0) #f (srfi 128)) ((comparator-check-type) variable |\x0;comparator-check-type~1pxGHH~11714| (0) #f (srfi 128)) ((comparator-test-type) variable |\x0;comparator-test-type~1pxGHH~11713| (0) #f (srfi 128)) ((comparator-hash-function) variable |\x0;comparator-hash-function~1pxGHH~11485| (0) #f (srfi 128 kernel)) ((comparator-ordering-predicate) variable |\x0;comparator-ordering-predicate~1pxGHH~11483| (0) #f (srfi 128 kernel)) ((comparator-equality-predicate) variable |\x0;comparator-equality-predicate~1pxGHH~11482| (0) #f (srfi 128 kernel)) ((comparator-type-test-predicate) variable |\x0;comparator-type-test-predicate~1pxGHH~11481| (0) #f (srfi 128 kernel)) ((comparator-register-default!) variable |\x0;comparator-register-default!~1pxGHH~11757| (0) #f (srfi 128)) ((default-hash) variable |\x0;default-hash~1pxGHH~11763| (0) #f (srfi 128)) ((make-default-comparator) variable |\x0;make-default-comparator~1pxGHH~11766| (0) #f (srfi 128)) ((number-hash) variable |\x0;number-hash~1pxGHH~11730| (0) #f (srfi 128)) ((symbol-hash) variable symbol-hash (0) #f (larceny PRIMITIVES)) ((string-ci-hash) variable string-ci-hash (0) #f (larceny PRIMITIVES)) ((string-hash) variable string-hash (0) #f (larceny PRIMITIVES)) ((char-ci-hash) variable |\x0;char-ci-hash~1pxGHH~11729| (0) #f (srfi 128)) ((char-hash) variable |\x0;char-hash~1pxGHH~11728| (0) #f (srfi 128)) ((boolean-hash) variable |\x0;boolean-hash~1pxGHH~11727| (0) #f (srfi 128)) ((make-equal-comparator) variable |\x0;make-equal-comparator~1pxGHH~11735| (0) #f (srfi 128)) ((make-eqv-comparator) variable |\x0;make-eqv-comparator~1pxGHH~11734| (0) #f (srfi 128)) ((make-eq-comparator) variable |\x0;make-eq-comparator~1pxGHH~11733| (0) #f (srfi 128)) ((make-vector-comparator) variable |\x0;make-vector-comparator~1pxGHH~11748| (0) #f (srfi 128)) ((make-list-comparator) variable |\x0;make-list-comparator~1pxGHH~11743| (0) #f (srfi 128)) ((make-pair-comparator) variable |\x0;make-pair-comparator~1pxGHH~11737| (0) #f (srfi 128)) ((make-comparator) variable |\x0;make-comparator~1pxGHH~11489| (0) #f (srfi 128 kernel)) ((comparator-hashable?) variable |\x0;comparator-hashable?~1pxGHH~11488| (0) #f (srfi 128 kernel)) ((comparator-ordered?) variable |\x0;comparator-ordered?~1pxGHH~11486| (0) #f (srfi 128 kernel)) ((comparator?) variable |\x0;comparator?~1pxGHH~11480| (0) #f (srfi 128 kernel)) ((program) macro program (0) #f ()) ((library) macro library (0) #f ()) ((define-library) macro define-library (0) #f ()) ((export) macro export (0) #f ()) ((import) macro import (0) #f ()) ((only) macro only (0) #f ()) ((except) macro except (0) #f ()) ((prefix) macro prefix (0) #f ()) ((rename) macro rename (0) #f ()) ((primitives) macro primitives (0) #f ()) ((begin) macro begin (0) #f ()) ((cond-expand) macro cond-expand (0) #f ()) ((include) macro include (0) #f ()) ((include-ci) macro include-ci (0) #f ()) ((include-library-declarations) macro include-library-declarations (0) #f ()))) (2 (((x |\x0;c~1pxGHH~18226|) variable |\x0;x~1pxGHH~18228| (0) #f (srfi 114 comparators)))) (1 ()) (0 (((dummy |\x0;c~1pxGHH~18226|) . #f) ((p) . #f) ((greaterequal) . #f) ((less) . #f)))) #ex:uncompress)
 #f #( #(#f #f 0 src/Build/compile-standard-libraries.sch #(20 1 0) ()) #f #( #(#f #f 1 src/Build/compile-standard-libraries.sch #(20 1 0) (|\x0;x~1pxGHH~18039|)) case (|\x0;env~1pxGHH~18049|) (srfi 114 comparators) #ex:syntax-rename else "if3: bad comparison value" error #ex:invalid-form)
 |\x0;if3~1pxGHH~18036| #ex:register-macro! #f #( ((0 . #(#f #f 1 src/Build/compile-standard-libraries.sch #(20 1 0) (|\x0;x~1pxGHH~18063|))) (2551 . #(#f #f 0 src/Build/compile-standard-libraries.sch #(20 1 0) ()))) if3 (|\x0;env~1pxGHH~18084|) (srfi 114 comparators) #ex:syntax-rename if=? (|\x0;env~1pxGHH~18072|) undef #ex:invalid-form)
 |\x0;if=?~1pxGHH~18060| #f #( ((0 . #(#f #f 1 src/Build/compile-standard-libraries.sch #(20 1 0) (|\x0;x~1pxGHH~18096|))) (2551 . #(#f #f 0 src/Build/compile-standard-libraries.sch #(20 1 0) ()))) if3 (|\x0;env~1pxGHH~18117|) (srfi 114 comparators) #ex:syntax-rename if<? (|\x0;env~1pxGHH~18105|) undef #ex:invalid-form)
 |\x0;if<?~1pxGHH~18093| #f #( ((0 . #(#f #f 1 src/Build/compile-standard-libraries.sch #(20 1 0) (|\x0;x~1pxGHH~18129|))) (2551 . #(#f #f 0 src/Build/compile-standard-libraries.sch #(20 1 0) ()))) if3 (|\x0;env~1pxGHH~18150|) (srfi 114 comparators) #ex:syntax-rename if>? (|\x0;env~1pxGHH~18138|) undef #ex:invalid-form)
 |\x0;if>?~1pxGHH~18126| #f #( ((0 . #(#f #f 1 src/Build/compile-standard-libraries.sch #(20 1 0) (|\x0;x~1pxGHH~18162|))) (2550 . #(#f #f 0 src/Build/compile-standard-libraries.sch #(20 1 0) ()))) if3 (|\x0;env~1pxGHH~18183|) (srfi 114 comparators) #ex:syntax-rename if-not=? (|\x0;env~1pxGHH~18171|) undef #ex:invalid-form)
 |\x0;if-not=?~1pxGHH~18159| #f #( ((0 . #(#f #f 1 src/Build/compile-standard-libraries.sch #(20 1 0) (|\x0;x~1pxGHH~18195|))) (2550 . #(#f #f 0 src/Build/compile-standard-libraries.sch #(20 1 0) ()))) if3 (|\x0;env~1pxGHH~18216|) (srfi 114 comparators) #ex:syntax-rename if>? (|\x0;env~1pxGHH~18204|) undef #ex:invalid-form)
 |\x0;if<=?~1pxGHH~18192| #f #( ((0 . #(#f #f 1 src/Build/compile-standard-libraries.sch #(20 1 0) (|\x0;x~1pxGHH~18228|))) (2550 . #(#f #f 0 src/Build/compile-standard-libraries.sch #(20 1 0) ()))) if3 (|\x0;env~1pxGHH~18249|) (srfi 114 comparators) #ex:syntax-rename if>=? (|\x0;env~1pxGHH~18237|) undef #ex:invalid-form)
 |\x0;if>=?~1pxGHH~18225| #values)
 #f #( #(#f #f 0 src/Build/compile-standard-libraries.sch #(20 1 0) ()) #ex:undefined #|\x0;make-debug-comparator~1pxGHH~18356| #|\x0;check-all~1pxGHH~18355| #|\x0;check-hash-value~1pxGHH~18354| #|\x0;check-transitive-comparison~1pxGHH~18353| #|\x0;check-transitive-equality~1pxGHH~18352| #|\x0;check-asymmetric-comparison~1pxGHH~18351| #|\x0;check-symmetric-equality~1pxGHH~18350| #|\x0;check-reflexive-comparison~1pxGHH~18349| #|\x0;check-reflexive-equality~1pxGHH~18348| #|\x0;check-type-test~1pxGHH~18347| #|\x0;debug-deny~1pxGHH~18346| #|\x0;debug-assert~1pxGHH~18345| #|\x0;make-reverse-comparator~1pxGHH~18344| #|\x0;make-refining-comparator~1pxGHH~18343| #|\x0;refined-hash-function~1pxGHH~18342| #|\x0;refined-comparison-procedure~1pxGHH~18341| #|\x0;refined-equality-predicate~1pxGHH~18340| #|\x0;make-selecting-comparator~1pxGHH~18339| #|\x0;selected-hash-function~1pxGHH~18338| #|\x0;selected-comparison-procedure~1pxGHH~18337| #|\x0;selected-equality-predicate~1pxGHH~18336| #|\x0;selected-type-test~1pxGHH~18335| #|\x0;matching-comparator~1pxGHH~18334| #|\x0;equal-comparator~1pxGHH~18333| #|\x0;eqv-comparator~1pxGHH~18332| #|\x0;eq-comparator~1pxGHH~18331| #|\x0;make-improper-list-comparator~1pxGHH~18330| #|\x0;make-improper-list-hash~1pxGHH~18329| #|\x0;make-improper-list-comparison~1pxGHH~18328| #|\x0;improper-list-type~1pxGHH~18327| #|\x0;pair-hash~1pxGHH~18326| #|\x0;pair-comparator~1pxGHH~18325| #|\x0;make-pair-hash~1pxGHH~18324| #|\x0;pair-comparison~1pxGHH~18323| #|\x0;make-pair-comparison~1pxGHH~18322| #|\x0;make-cdr-comparator~1pxGHH~18321| #|\x0;make-car-comparator~1pxGHH~18320| #|\x0;bytevector-hash~1pxGHH~18319| #|\x0;bytevector-comparison~1pxGHH~18318| #|\x0;bytevector-comparator~1pxGHH~18317| #|\x0;make-bytevector-comparator~1pxGHH~18316| #|\x0;vector-hash~1pxGHH~18315| #|\x0;vector-comparison~1pxGHH~18314| #|\x0;vector-comparator~1pxGHH~18313| #|\x0;list-comparator~1pxGHH~18312| #|\x0;make-vectorwise-comparator~1pxGHH~18311| #|\x0;make-listwise-comparator~1pxGHH~18310| #|\x0;symbol-comparator~1pxGHH~18309| #|\x0;string-ci-comparator~1pxGHH~18308| #|\x0;string-comparator~1pxGHH~18307| #|\x0;make-vectorwise-hash~1pxGHH~18306| #|\x0;make-vectorwise-comparison~1pxGHH~18305| #|\x0;make-listwise-hash~1pxGHH~18304| #|\x0;make-listwise-comparison~1pxGHH~18303| #|\x0;limit~1pxGHH~18302| #|\x0;make-inexact-real-comparator~1pxGHH~18301| #|\x0;make-inexact-real-hash~1pxGHH~18300| #|\x0;make-inexact-real-comparison~1pxGHH~18299| #|\x0;nan-comparison~1pxGHH~18298| #|\x0;rounded-to~1pxGHH~18297| #|\x0;inexact-real?~1pxGHH~18296| #|\x0;exact-integer-comparator~1pxGHH~18295| #|\x0;integer-comparator~1pxGHH~18294| #|\x0;rational-comparator~1pxGHH~18293| #|\x0;real-comparator~1pxGHH~18292| #|\x0;complex-comparator~1pxGHH~18291| #|\x0;number-comparator~1pxGHH~18290| #|\x0;complex-comparison~1pxGHH~18289| #|\x0;real-comparison~1pxGHH~18288| #|\x0;symbol-comparison~1pxGHH~18287| #|\x0;symbol<?~1pxGHH~18286| #|\x0;string-ci-comparison~1pxGHH~18285| #|\x0;string-comparison~1pxGHH~18284| #|\x0;char-ci-comparator~1pxGHH~18283| #|\x0;char-ci-comparison~1pxGHH~18282| #|\x0;char-comparator~1pxGHH~18281| #|\x0;char-comparison~1pxGHH~18280| #|\x0;boolean-comparator~1pxGHH~18279| #|\x0;boolean-comparison~1pxGHH~18278| #|\x0;default-comparator~1pxGHH~18277| #|\x0;comparator-max~1pxGHH~18276| #|\x0;comparator-min~1pxGHH~18275| #|\x0;in-closed-open-interval?~1pxGHH~18274| #|\x0;in-open-closed-interval?~1pxGHH~18273| #|\x0;in-closed-interval?~1pxGHH~18272| #|\x0;in-open-interval?~1pxGHH~18271| #|\x0;make>=~1pxGHH~18270| #|\x0;make<=~1pxGHH~18269| #|\x0;make>~1pxGHH~18268| #|\x0;make<~1pxGHH~18267| #|\x0;make=~1pxGHH~18266| #|\x0;make-comparison=/>~1pxGHH~18265| #|\x0;make-comparison=/<~1pxGHH~18264| #|\x0;make-comparison>=~1pxGHH~18263| #|\x0;make-comparison<=~1pxGHH~18262| #|\x0;make-comparison>~1pxGHH~18261| #|\x0;make-comparison<~1pxGHH~18260| #|\x0;comparator-compare~1pxGHH~18259| #|\x0;comparator-equal?~1pxGHH~18258| #|\x0;undef~1pxGHH~18035| #|\x0;undef~1pxGHH~18035| #f #( #(comparator-equal? #f 3 src/Build/compile-standard-libraries.sch #(20 1 0) (|\x0;comparator~1pxGHH~19211| |\x0;obj1~1pxGHH~19212| |\x0;obj2~1pxGHH~19213|)) #|\x0;comparator-equality-predicate~1pxGHH~11482|)
 #|\x0;comparator-equal?~1pxGHH~18258| #f #( #(comparator-compare #f 3 src/Build/compile-standard-libraries.sch #(20 1 0) (|\x0;comparator~1pxGHH~19207| |\x0;obj1~1pxGHH~19208| |\x0;obj2~1pxGHH~19209|)) #|\x0;comparator-comparison-procedure~1pxGHH~11484|)
 #|\x0;comparator-compare~1pxGHH~18259| #f #( #(make-comparison< #f 1 src/Build/compile-standard-libraries.sch #(20 1 0) (|\x0;<~1pxGHH~19196|)) #f #( #(#f #f 2 src/Build/compile-standard-libraries.sch #(20 1 0) (|\x0;a~1pxGHH~19198| |\x0;b~1pxGHH~19199|)))
)
 #|\x0;make-comparison<~1pxGHH~18260| #f #( #(make-comparison> #f 1 src/Build/compile-standard-libraries.sch #(20 1 0) (|\x0;>~1pxGHH~19185|)) #f #( #(#f #f 2 src/Build/compile-standard-libraries.sch #(20 1 0) (|\x0;a~1pxGHH~19187| |\x0;b~1pxGHH~19188|)))
)
 #|\x0;make-comparison>~1pxGHH~18261| #f #( #(make-comparison<= #f 1 src/Build/compile-standard-libraries.sch #(20 1 0) (|\x0;<=~1pxGHH~19178|)) #f #( #(#f #f 2 src/Build/compile-standard-libraries.sch #(20 1 0) (|\x0;a~1pxGHH~19180| |\x0;b~1pxGHH~19181|)))
)
 #|\x0;make-comparison<=~1pxGHH~18262| #f #( #(make-comparison>= #f 1 src/Build/compile-standard-libraries.sch #(20 1 0) (|\x0;>=~1pxGHH~19171|)) #f #( #(#f #f 2 src/Build/compile-standard-libraries.sch #(20 1 0) (|\x0;a~1pxGHH~19173| |\x0;b~1pxGHH~19174|)))
)
 #|\x0;make-comparison>=~1pxGHH~18263| #f #( #(make-comparison=/< #f 2 src/Build/compile-standard-libraries.sch #(20 1 0) (|\x0;=~1pxGHH~19159| |\x0;<~1pxGHH~19160|)) #f #( #(#f #f 2 src/Build/compile-standard-libraries.sch #(20 1 0) (|\x0;a~1pxGHH~19162| |\x0;b~1pxGHH~19163|)))
)
 #|\x0;make-comparison=/<~1pxGHH~18264| #f #( #(make-comparison=/> #f 2 src/Build/compile-standard-libraries.sch #(20 1 0) (|\x0;=~1pxGHH~19147| |\x0;>~1pxGHH~19148|)) #f #( #(#f #f 2 src/Build/compile-standard-libraries.sch #(20 1 0) (|\x0;a~1pxGHH~19150| |\x0;b~1pxGHH~19151|)))
)
 #|\x0;make-comparison=/>~1pxGHH~18265| #f #( #(make= #f 1 src/Build/compile-standard-libraries.sch #(20 1 0) (|\x0;comparator~1pxGHH~19143|)) #f #( #(#f #f #         src/Build/compile-standard-libraries.sch #(20 1 0) |\x0;args~1pxGHH~19145|) #|\x0;=?~1pxGHH~11721| #apply)
)
 #|\x0;make=~1pxGHH~18266| #f #( #(make< #f 1 src/Build/compile-standard-libraries.sch #(20 1 0) (|\x0;comparator~1pxGHH~19139|)) #f #( #(#f #f #         src/Build/compile-standard-libraries.sch #(20 1 0) |\x0;args~1pxGHH~19141|) #|\x0;<?~1pxGHH~11722| #apply)
)
 #|\x0;make<~1pxGHH~18267| #f #( #(make> #f 1 src/Build/compile-standard-libraries.sch #(20 1 0) (|\x0;comparator~1pxGHH~19135|)) #f #( #(#f #f #         src/Build/compile-standard-libraries.sch #(20 1 0) |\x0;args~1pxGHH~19137|) #|\x0;>?~1pxGHH~11723| #apply)
)
 #|\x0;make>~1pxGHH~18268| #f #( #(make<= #f 1 src/Build/compile-standard-libraries.sch #(20 1 0) (|\x0;comparator~1pxGHH~19131|)) #f #( #(#f #f #         src/Build/compile-standard-libraries.sch #(20 1 0) |\x0;args~1pxGHH~19133|) #|\x0;<=?~1pxGHH~11724| #apply)
)
 #|\x0;make<=~1pxGHH~18269| #f #( #(make>= #f 1 src/Build/compile-standard-libraries.sch #(20 1 0) (|\x0;comparator~1pxGHH~19127|)) #f #( #(#f #f #         src/Build/compile-standard-libraries.sch #(20 1 0) |\x0;args~1pxGHH~19129|) #|\x0;>=?~1pxGHH~11725| #apply)
)
 #|\x0;make>=~1pxGHH~18270| #f #( #(in-open-interval? #f #         src/Build/compile-standard-libraries.sch #(20 1 0) |\x0;args~1pxGHH~19104|) #length #f #( #(#f #f 4 src/Build/compile-standard-libraries.sch #(20 1 0) (|\x0;comparator~1pxGHH~19112| |\x0;a~1pxGHH~19113| |\x0;b~1pxGHH~19114| |\x0;c~1pxGHH~19115|)) #|\x0;<?~1pxGHH~11722|)
 #apply #f #( #(#f #f 3 src/Build/compile-standard-libraries.sch #(20 1 0) (|\x0;a~1pxGHH~19122| |\x0;b~1pxGHH~19123| |\x0;c~1pxGHH~19124|)) #|\x0;default-comparator~1pxGHH~18277| #|\x0;in-open-interval?~1pxGHH~18271|)
 "unexpected number of arguments" #assertion-violation)
 #|\x0;in-open-interval?~1pxGHH~18271| #f #( #(in-closed-interval? #f #         src/Build/compile-standard-libraries.sch #(20 1 0) |\x0;args~1pxGHH~19078|) #length #f #( #(#f #f 4 src/Build/compile-standard-libraries.sch #(20 1 0) (|\x0;comparator~1pxGHH~19086| |\x0;a~1pxGHH~19087| |\x0;b~1pxGHH~19088| |\x0;c~1pxGHH~19089|)) #|\x0;<=?~1pxGHH~11724|)
 #apply #f #( #(#f #f 3 src/Build/compile-standard-libraries.sch #(20 1 0) (|\x0;a~1pxGHH~19096| |\x0;b~1pxGHH~19097| |\x0;c~1pxGHH~19098|)) #|\x0;default-comparator~1pxGHH~18277| #|\x0;in-closed-interval?~1pxGHH~18272|)
 "unexpected number of arguments" #assertion-violation)
 #|\x0;in-closed-interval?~1pxGHH~18272| #f #( #(in-open-closed-interval? #f #         src/Build/compile-standard-libraries.sch #(20 1 0) |\x0;args~1pxGHH~19052|) #length #f #( #(#f #f 4 src/Build/compile-standard-libraries.sch #(20 1 0) (|\x0;comparator~1pxGHH~19060| |\x0;a~1pxGHH~19061| |\x0;b~1pxGHH~19062| |\x0;c~1pxGHH~19063|)) #|\x0;<?~1pxGHH~11722| #|\x0;<=?~1pxGHH~11724|)
 #apply #f #( #(#f #f 3 src/Build/compile-standard-libraries.sch #(20 1 0) (|\x0;a~1pxGHH~19070| |\x0;b~1pxGHH~19071| |\x0;c~1pxGHH~19072|)) #|\x0;default-comparator~1pxGHH~18277| #|\x0;in-open-interval?~1pxGHH~18271|)
 "unexpected number of arguments" #assertion-violation)
 #|\x0;in-open-closed-interval?~1pxGHH~18273| #f #( #(in-closed-open-interval? #f #         src/Build/compile-standard-libraries.sch #(20 1 0) |\x0;args~1pxGHH~19026|) #length #f #( #(#f #f 4 src/Build/compile-standard-libraries.sch #(20 1 0) (|\x0;comparator~1pxGHH~19034| |\x0;a~1pxGHH~19035| |\x0;b~1pxGHH~19036| |\x0;c~1pxGHH~19037|)) #|\x0;<=?~1pxGHH~11724| #|\x0;<?~1pxGHH~11722|)
 #apply #f #( #(#f #f 3 src/Build/compile-standard-libraries.sch #(20 1 0) (|\x0;a~1pxGHH~19044| |\x0;b~1pxGHH~19045| |\x0;c~1pxGHH~19046|)) #|\x0;default-comparator~1pxGHH~18277| #|\x0;in-open-interval?~1pxGHH~18271|)
 "unexpected number of arguments" #assertion-violation)
 #|\x0;in-closed-open-interval?~1pxGHH~18274| #f #( #(comparator-min #f #         src/Build/compile-standard-libraries.sch #(20 1 0) |\x0;args~1pxGHH~18995|) #length #f #( #(#f #f 2 src/Build/compile-standard-libraries.sch #(20 1 0) (|\x0;comparator~1pxGHH~19003| |\x0;a~1pxGHH~19004|)))
 #apply #f #( #(#f #f 3 src/Build/compile-standard-libraries.sch #(20 1 0) (|\x0;comparator~1pxGHH~19009| |\x0;a~1pxGHH~19010| |\x0;b~1pxGHH~19011|)) #|\x0;<?~1pxGHH~11722|)
 #f #( #(#f #f #      @ src/Build/compile-standard-libraries.sch #(20 1 0) (|\x0;comparator~1pxGHH~19017| |\x0;a~1pxGHH~19018| |\x0;b~1pxGHH~19019| . |\x0;objs~1pxGHH~19020|)) #|\x0;comparator-min~1pxGHH~18275| #apply)
 "unexpected number of arguments" #assertion-violation)
 #|\x0;comparator-min~1pxGHH~18275| #f #( #(comparator-max #f #         src/Build/compile-standard-libraries.sch #(20 1 0) |\x0;args~1pxGHH~18962|) #length #f #( #(#f #f 2 src/Build/compile-standard-libraries.sch #(20 1 0) (|\x0;comparator~1pxGHH~18970| |\x0;a~1pxGHH~18971|)))
 #apply #f #( #(#f #f 3 src/Build/compile-standard-libraries.sch #(20 1 0) (|\x0;comparator~1pxGHH~18976| |\x0;a~1pxGHH~18977| |\x0;b~1pxGHH~18978|)) #|\x0;>?~1pxGHH~11723|)
 #f #( #(#f #f #      @ src/Build/compile-standard-libraries.sch #(20 1 0) (|\x0;comparator~1pxGHH~18984| |\x0;a~1pxGHH~18985| |\x0;b~1pxGHH~18986| . |\x0;objs~1pxGHH~18987|)) #|\x0;comparator-max~1pxGHH~18276| #apply)
 "unexpected number of arguments" #assertion-violation)
 #|\x0;comparator-max~1pxGHH~18276| #|\x0;make-default-comparator~1pxGHH~11766| #|\x0;default-comparator~1pxGHH~18277| #f #( #(boolean-comparison #f 2 src/Build/compile-standard-libraries.sch #(20 1 0) (|\x0;a~1pxGHH~18944| |\x0;b~1pxGHH~18945|)))
 #|\x0;boolean-comparison~1pxGHH~18278| #boolean? #boolean=? #|\x0;boolean-comparison~1pxGHH~18278| #|\x0;boolean-hash~1pxGHH~11727| #|\x0;make-comparator~1pxGHH~11489| #|\x0;boolean-comparator~1pxGHH~18279| #char=? #char<? #|\x0;make-comparison=/<~1pxGHH~18264| #|\x0;char-comparison~1pxGHH~18280| #char? #char=? #|\x0;char-comparison~1pxGHH~18280| #|\x0;char-hash~1pxGHH~11728| #|\x0;make-comparator~1pxGHH~11489| #|\x0;char-comparator~1pxGHH~18281| #char-ci=? #char-ci<? #|\x0;make-comparison=/<~1pxGHH~18264| #|\x0;char-ci-comparison~1pxGHH~18282| #char? #char-ci=? #|\x0;char-ci-comparison~1pxGHH~18282| #|\x0;char-ci-hash~1pxGHH~11729| #|\x0;make-comparator~1pxGHH~11489| #|\x0;char-ci-comparator~1pxGHH~18283| #string=? #string<? #|\x0;make-comparison=/<~1pxGHH~18264| #|\x0;string-comparison~1pxGHH~18284| #string-ci=? #string-ci<? #|\x0;make-comparison=/<~1pxGHH~18264| #|\x0;string-ci-comparison~1pxGHH~18285| #f #( #(symbol<? #f 2 src/Build/compile-standard-libraries.sch #(20 1 0) (|\x0;a~1pxGHH~18941| |\x0;b~1pxGHH~18942|)) #symbol->string #string<?)
 #|\x0;symbol<?~1pxGHH~18286| #symbol=? #|\x0;symbol<?~1pxGHH~18286| #|\x0;make-comparison=/<~1pxGHH~18264| #|\x0;symbol-comparison~1pxGHH~18287| #f #( #(real-comparison #f 2 src/Build/compile-standard-libraries.sch #(20 1 0) (|\x0;a~1pxGHH~18932| |\x0;b~1pxGHH~18933|)))
 #|\x0;real-comparison~1pxGHH~18288| #f #( #(complex-comparison #f 2 src/Build/compile-standard-libraries.sch #(20 1 0) (|\x0;a~1pxGHH~18925| |\x0;b~1pxGHH~18926|)) #|\x0;real-comparison~1pxGHH~18288|)
 #|\x0;complex-comparison~1pxGHH~18289| #number? #|\x0;complex-comparison~1pxGHH~18289| #|\x0;number-hash~1pxGHH~11730| #= #|\x0;make-comparator~1pxGHH~11489| #|\x0;number-comparator~1pxGHH~18290| #complex? #|\x0;complex-comparison~1pxGHH~18289| #|\x0;number-hash~1pxGHH~11730| #= #|\x0;make-comparator~1pxGHH~11489| #|\x0;complex-comparator~1pxGHH~18291| #real? #|\x0;number-hash~1pxGHH~11730| #= #|\x0;real-comparison~1pxGHH~18288| #|\x0;make-comparator~1pxGHH~11489| #|\x0;real-comparator~1pxGHH~18292| #rational? #|\x0;number-hash~1pxGHH~11730| #= #|\x0;real-comparison~1pxGHH~18288| #|\x0;make-comparator~1pxGHH~11489| #|\x0;rational-comparator~1pxGHH~18293| #integer? #|\x0;number-hash~1pxGHH~11730| #= #|\x0;real-comparison~1pxGHH~18288| #|\x0;make-comparator~1pxGHH~11489| #|\x0;integer-comparator~1pxGHH~18294| #exact-integer? #|\x0;number-hash~1pxGHH~11730| #= #|\x0;real-comparison~1pxGHH~18288| #|\x0;make-comparator~1pxGHH~11489| #|\x0;exact-integer-comparator~1pxGHH~18295| #f #( #(inexact-real? #f 1 src/Build/compile-standard-libraries.sch #(20 1 0) (|\x0;obj~1pxGHH~18920|)))
 #|\x0;inexact-real?~1pxGHH~18296| #f #( #(rounded-to #f 3 src/Build/compile-standard-libraries.sch #(20 1 0) (|\x0;x~1pxGHH~18897| |\x0;epsilon~1pxGHH~18898| |\x0;rounding~1pxGHH~18899|)) round ceiling #ceiling floor #floor truncate "invalid rounding specification" #error)
 #|\x0;rounded-to~1pxGHH~18297| #f #( #(nan-comparison #f 3 src/Build/compile-standard-libraries.sch #(20 1 0) (|\x0;nan-handling~1pxGHH~18876| |\x0;which~1pxGHH~18877| |\x0;other~1pxGHH~18878|)) error "Attempt to compare NaN with non-NaN" #error min a-nan max "Invalid nan-handling specification")
 #|\x0;nan-comparison~1pxGHH~18298| #f #( #(make-inexact-real-comparison #f 3 src/Build/compile-standard-libraries.sch #(20 1 0) (|\x0;epsilon~1pxGHH~18853| |\x0;rounding~1pxGHH~18854| |\x0;nan-handling~1pxGHH~18855|)) #f #( #(#f #f 2 src/Build/compile-standard-libraries.sch #(20 1 0) (|\x0;a~1pxGHH~18857| |\x0;b~1pxGHH~18858|)) a-nan #|\x0;nan-comparison~1pxGHH~18298| b-nan #|\x0;rounded-to~1pxGHH~18297| #|\x0;real-comparison~1pxGHH~18288|)
)
 #|\x0;make-inexact-real-comparison~1pxGHH~18299| #f #( #(make-inexact-real-hash #f 2 src/Build/compile-standard-libraries.sch #(20 1 0) (|\x0;epsilon~1pxGHH~18847| |\x0;rounding~1pxGHH~18848|)) #f #( #(#f #f 1 src/Build/compile-standard-libraries.sch #(20 1 0) (|\x0;obj~1pxGHH~18850|)) #|\x0;rounded-to~1pxGHH~18297| #|\x0;number-hash~1pxGHH~11730|)
)
 #|\x0;make-inexact-real-hash~1pxGHH~18300| #f #( #(make-inexact-real-comparator #f 3 src/Build/compile-standard-libraries.sch #(20 1 0) (|\x0;epsilon~1pxGHH~18843| |\x0;rounding~1pxGHH~18844| |\x0;nan-handling~1pxGHH~18845|)) #|\x0;make-inexact-real-comparison~1pxGHH~18299| #|\x0;make-inexact-real-hash~1pxGHH~18300| #|\x0;inexact-real?~1pxGHH~18296| #|\x0;make-comparator~1pxGHH~11489|)
 #|\x0;make-inexact-real-comparator~1pxGHH~18301| #expt #|\x0;limit~1pxGHH~18302| #f #( #(make-listwise-comparison #f 4 src/Build/compile-standard-libraries.sch #(20 1 0) (|\x0;comparison~1pxGHH~18810| |\x0;null?~1pxGHH~18811| |\x0;car~1pxGHH~18812| |\x0;cdr~1pxGHH~18813|)) #ex:undefined #f #( #(|\x0;proc~1pxGHH~18818| #f 2 src/Build/compile-standard-libraries.sch #(20 1 0) (|\x0;a~1pxGHH~18822| |\x0;b~1pxGHH~18823|)))
)
 #|\x0;make-listwise-comparison~1pxGHH~18303| #f #( #(make-listwise-hash #f 4 src/Build/compile-standard-libraries.sch #(20 1 0) (|\x0;hash~1pxGHH~18781| |\x0;null?~1pxGHH~18782| |\x0;car~1pxGHH~18783| |\x0;cdr~1pxGHH~18784|)) #f #( ((0 . #(#f #f 1 src/Build/compile-standard-libraries.sch #(20 1 0) (|\x0;obj~1pxGHH~18786|))) (211 . #(|\x0;loop~1pxGHH~18792| #f 2 src/Build/compile-standard-libraries.sch #(20 1 0) (|\x0;obj~1pxGHH~18799| |\x0;result~1pxGHH~18800|)))) #|\x0;limit~1pxGHH~18302| #modulo)
)
 #|\x0;make-listwise-hash~1pxGHH~18304| #f #( #(make-vectorwise-comparison #f 3 src/Build/compile-standard-libraries.sch #(20 1 0) (|\x0;comparison~1pxGHH~18744| |\x0;length~1pxGHH~18745| |\x0;ref~1pxGHH~18746|)) #f #( ((0 . #(#f #f 2 src/Build/compile-standard-libraries.sch #(20 1 0) (|\x0;a~1pxGHH~18748| |\x0;b~1pxGHH~18749|))) (1326 . #(|\x0;loop~1pxGHH~18768| #f 1 src/Build/compile-standard-libraries.sch #(20 1 0) (|\x0;index~1pxGHH~18774|)))))
)
 #|\x0;make-vectorwise-comparison~1pxGHH~18305| #f #( #(make-vectorwise-hash #f 3 src/Build/compile-standard-libraries.sch #(20 1 0) (|\x0;hash~1pxGHH~18716| |\x0;length~1pxGHH~18717| |\x0;ref~1pxGHH~18718|)) #f #( ((0 . #(#f #f 1 src/Build/compile-standard-libraries.sch #(20 1 0) (|\x0;obj~1pxGHH~18720|))) (577 . #(|\x0;loop~1pxGHH~18726| #f 2 src/Build/compile-standard-libraries.sch #(20 1 0) (|\x0;index~1pxGHH~18733| |\x0;result~1pxGHH~18734|)))) #|\x0;limit~1pxGHH~18302| #modulo)
)
 #|\x0;make-vectorwise-hash~1pxGHH~18306| #string? #string=? #|\x0;string-comparison~1pxGHH~18284| #string-hash #|\x0;make-comparator~1pxGHH~11489| #|\x0;string-comparator~1pxGHH~18307| #string? #string-ci=? #|\x0;string-ci-comparison~1pxGHH~18285| #string-ci-hash #|\x0;make-comparator~1pxGHH~11489| #|\x0;string-ci-comparator~1pxGHH~18308| #symbol? #symbol=? #|\x0;symbol-comparison~1pxGHH~18287| #symbol-hash #|\x0;make-comparator~1pxGHH~11489| #f #( #(make-listwise-comparator #f 5 src/Build/compile-standard-libraries.sch #(20 1 0) (|\x0;test~1pxGHH~18710| |\x0;comparator~1pxGHH~18711| |\x0;null?~1pxGHH~18712| |\x0;car~1pxGHH~18713| |\x0;cdr~1pxGHH~18714|)) #|\x0;comparator-comparison-procedure~1pxGHH~11484| #|\x0;make-listwise-comparison~1pxGHH~18303| #|\x0;comparator-hash-function~1pxGHH~11485| #|\x0;make-listwise-hash~1pxGHH~18304| #|\x0;make-comparator~1pxGHH~11489|)
 #f #( #(make-vectorwise-comparator #f 4 src/Build/compile-standard-libraries.sch #(20 1 0) (|\x0;test~1pxGHH~18705| |\x0;comparator~1pxGHH~18706| |\x0;length~1pxGHH~18707| |\x0;ref~1pxGHH~18708|)) #|\x0;comparator-comparison-procedure~1pxGHH~11484| #|\x0;make-vectorwise-comparison~1pxGHH~18305| #|\x0;comparator-hash-function~1pxGHH~11485| #|\x0;make-vectorwise-hash~1pxGHH~18306| #|\x0;make-comparator~1pxGHH~11489|)
 #f #( #(#f #f 1 src/Build/compile-standard-libraries.sch #(20 1 0) (|\x0;obj~1pxGHH~18701|)))
 #car #cdr #|\x0;default-comparator~1pxGHH~18277| #null? #|\x0;make-list-comparator~1pxGHH~11743| #vector? #vector-length #vector-ref #|\x0;default-comparator~1pxGHH~18277| #|\x0;make-vector-comparator~1pxGHH~11748| #|\x0;comparator-comparison-procedure~1pxGHH~11484| #|\x0;comparator-hash-function~1pxGHH~11485| #f #( #(make-bytevector-comparator #f 1 src/Build/compile-standard-libraries.sch #(20 1 0) (|\x0;comparator~1pxGHH~18699|)) #bytevector? #bytevector-length #bytevector-u8-ref #|\x0;make-vectorwise-comparator~1pxGHH~18311|)
 #|\x0;default-comparator~1pxGHH~18277| #|\x0;comparator-comparison-procedure~1pxGHH~11484| #|\x0;comparator-hash-function~1pxGHH~11485| #f #( #(make-car-comparator #f 1 src/Build/compile-standard-libraries.sch #(20 1 0) (|\x0;comparator~1pxGHH~18692|)) #f #( #(#f #f 1 src/Build/compile-standard-libraries.sch #(20 1 0) (|\x0;obj~1pxGHH~18697|)) #|\x0;comparator-hash-function~1pxGHH~11485|)
 #f #( #(#f #f 2 src/Build/compile-standard-libraries.sch #(20 1 0) (|\x0;a~1pxGHH~18694| |\x0;b~1pxGHH~18695|)) #|\x0;comparator-compare~1pxGHH~18259|)
 #pair? #|\x0;make-comparator~1pxGHH~11489|)
 #f #( #(make-cdr-comparator #f 1 src/Build/compile-standard-libraries.sch #(20 1 0) (|\x0;comparator~1pxGHH~18685|)) #f #( #(#f #f 1 src/Build/compile-standard-libraries.sch #(20 1 0) (|\x0;obj~1pxGHH~18690|)) #|\x0;comparator-hash~1pxGHH~11715|)
 #f #( #(#f #f 2 src/Build/compile-standard-libraries.sch #(20 1 0) (|\x0;a~1pxGHH~18687| |\x0;b~1pxGHH~18688|)) #|\x0;comparator-compare~1pxGHH~18259|)
 #pair? #|\x0;make-comparator~1pxGHH~11489|)
 #f #( #(make-pair-comparison #f 2 src/Build/compile-standard-libraries.sch #(20 1 0) (|\x0;car-comparator~1pxGHH~18675| |\x0;cdr-comparator~1pxGHH~18676|)) #f #( #(#f #f 2 src/Build/compile-standard-libraries.sch #(20 1 0) (|\x0;a~1pxGHH~18678| |\x0;b~1pxGHH~18679|)) #|\x0;comparator-compare~1pxGHH~18259|)
)
 #|\x0;default-comparator~1pxGHH~18277| #|\x0;default-comparator~1pxGHH~18277| #f #( #(make-pair-hash #f 2 src/Build/compile-standard-libraries.sch #(20 1 0) (|\x0;car-comparator~1pxGHH~18670| |\x0;cdr-comparator~1pxGHH~18671|)) #f #( #(#f #f 1 src/Build/compile-standard-libraries.sch #(20 1 0) (|\x0;obj~1pxGHH~18673|)) #|\x0;comparator-hash~1pxGHH~11715|)
)
 #|\x0;default-comparator~1pxGHH~18277| #|\x0;default-comparator~1pxGHH~18277| #|\x0;make-pair-comparator~1pxGHH~11737| #|\x0;comparator-hash-function~1pxGHH~11485| #f #( #(improper-list-type #f 1 src/Build/compile-standard-libraries.sch #(20 1 0) (|\x0;obj~1pxGHH~18662|)))
 #f #( #(make-improper-list-comparison #f 1 src/Build/compile-standard-libraries.sch #(20 1 0) (|\x0;comparator~1pxGHH~18636|)) #|\x0;make-pair-comparison~1pxGHH~18322| #f #( #(#f #f 2 src/Build/compile-standard-libraries.sch #(20 1 0) (|\x0;a~1pxGHH~18641| |\x0;b~1pxGHH~18642|)) #|\x0;improper-list-type~1pxGHH~18327| #|\x0;real-comparison~1pxGHH~18288| #|\x0;comparator-compare~1pxGHH~18259|)
)
 #f #( #(make-improper-list-hash #f 1 src/Build/compile-standard-libraries.sch #(20 1 0) (|\x0;comparator~1pxGHH~18626|)) #f #( #(#f #f 1 src/Build/compile-standard-libraries.sch #(20 1 0) (|\x0;obj~1pxGHH~18628|)) #|\x0;comparator-hash~1pxGHH~11715|)
)
 #f #( #(make-improper-list-comparator #f 1 src/Build/compile-standard-libraries.sch #(20 1 0) (|\x0;comparator~1pxGHH~18624|)) #|\x0;make-improper-list-comparison~1pxGHH~18328| #|\x0;make-improper-list-hash~1pxGHH~18329| #|\x0;make-comparator~1pxGHH~11489|)
 #|\x0;make-eq-comparator~1pxGHH~11733| #|\x0;make-eqv-comparator~1pxGHH~11734| #|\x0;make-equal-comparator~1pxGHH~11735| #f #( #(matching-comparator #f 2 src/Build/compile-standard-libraries.sch #(20 1 0) (|\x0;obj~1pxGHH~18615| |\x0;comparators~1pxGHH~18616|)) #|\x0;comparator-test-type~1pxGHH~11713| #|\x0;matching-comparator~1pxGHH~18334|)
 #f #( #(selected-type-test #f #         src/Build/compile-standard-libraries.sch #(20 1 0) |\x0;comparators~1pxGHH~18610|) #f #( #(#f #f 1 src/Build/compile-standard-libraries.sch #(20 1 0) (|\x0;obj~1pxGHH~18612|)) #|\x0;matching-comparator~1pxGHH~18334|)
)
 #f #( #(selected-equality-predicate #f 1 src/Build/compile-standard-libraries.sch #(20 1 0) (|\x0;comparators~1pxGHH~18601|)) #f #( #(#f #f 2 src/Build/compile-standard-libraries.sch #(20 1 0) (|\x0;a~1pxGHH~18603| |\x0;b~1pxGHH~18604|)) #|\x0;matching-comparator~1pxGHH~18334| #|\x0;comparator-equal?~1pxGHH~18258| "no comparator can be selected" #error)
)
 #f #( #(selected-comparison-procedure #f 1 src/Build/compile-standard-libraries.sch #(20 1 0) (|\x0;comparators~1pxGHH~18592|)) #f #( #(#f #f 2 src/Build/compile-standard-libraries.sch #(20 1 0) (|\x0;a~1pxGHH~18594| |\x0;b~1pxGHH~18595|)) #|\x0;matching-comparator~1pxGHH~18334| #|\x0;comparator-compare~1pxGHH~18259| "no comparator can be selected" #error)
)
 #f #( #(selected-hash-function #f 1 src/Build/compile-standard-libraries.sch #(20 1 0) (|\x0;comparators~1pxGHH~18584|)) #f #( #(#f #f 1 src/Build/compile-standard-libraries.sch #(20 1 0) (|\x0;obj~1pxGHH~18586|)) #|\x0;matching-comparator~1pxGHH~18334| #|\x0;comparator-hash~1pxGHH~11715| "no comparator can be selected" #error)
)
 #f #( #(make-selecting-comparator #f #         src/Build/compile-standard-libraries.sch #(20 1 0) |\x0;comparators~1pxGHH~18582|) #|\x0;selected-type-test~1pxGHH~18335| #|\x0;selected-equality-predicate~1pxGHH~18336| #|\x0;selected-comparison-procedure~1pxGHH~18337| #|\x0;selected-hash-function~1pxGHH~18338| #|\x0;make-comparator~1pxGHH~11489|)
 #f #( #(refined-equality-predicate #f 1 src/Build/compile-standard-libraries.sch #(20 1 0) (|\x0;comparators~1pxGHH~18560|)) #f #( ((0 . #(#f #f 2 src/Build/compile-standard-libraries.sch #(20 1 0) (|\x0;a~1pxGHH~18562| |\x0;b~1pxGHH~18563|))) (635 . #(|\x0;loop~1pxGHH~18569| #f 2 src/Build/compile-standard-libraries.sch #(20 1 0) (|\x0;comparator~1pxGHH~18576| |\x0;first?~1pxGHH~18577|)))) #|\x0;matching-comparator~1pxGHH~18334| #|\x0;comparator-equal?~1pxGHH~18258| "no comparator can be selected" #error)
)
 #f #( #(refined-comparison-procedure #f 1 src/Build/compile-standard-libraries.sch #(20 1 0) (|\x0;comparators~1pxGHH~18535|)) #f #( ((0 . #(#f #f 2 src/Build/compile-standard-libraries.sch #(20 1 0) (|\x0;a~1pxGHH~18537| |\x0;b~1pxGHH~18538|))) (635 . #(|\x0;loop~1pxGHH~18544| #f 2 src/Build/compile-standard-libraries.sch #(20 1 0) (|\x0;comparator~1pxGHH~18551| |\x0;first?~1pxGHH~18552|)))) #|\x0;matching-comparator~1pxGHH~18334| #|\x0;comparator-compare~1pxGHH~18259| "no comparator can be selected" #error)
)
 #f #( #(refined-hash-function #f 1 src/Build/compile-standard-libraries.sch #(20 1 0) (|\x0;comparators~1pxGHH~18514|)) #f #( ((0 . #(#f #f 1 src/Build/compile-standard-libraries.sch #(20 1 0) (|\x0;obj~1pxGHH~18516|))) (255 . #(|\x0;loop~1pxGHH~18522| #f 2 src/Build/compile-standard-libraries.sch #(20 1 0) (|\x0;comparators~1pxGHH~18529| |\x0;last-comparator~1pxGHH~18530|)))) #|\x0;comparator-hash~1pxGHH~11715| "no comparator can be selected" #error #|\x0;comparator-test-type~1pxGHH~11713|)
)
 #f #( #(make-refining-comparator #f #         src/Build/compile-standard-libraries.sch #(20 1 0) |\x0;comparators~1pxGHH~18512|) #|\x0;selected-type-test~1pxGHH~18335| #|\x0;refined-equality-predicate~1pxGHH~18340| #|\x0;refined-comparison-procedure~1pxGHH~18341| #|\x0;refined-hash-function~1pxGHH~18342| #|\x0;make-comparator~1pxGHH~11489|)
 #f #( #(make-reverse-comparator #f 1 src/Build/compile-standard-libraries.sch #(20 1 0) (|\x0;comparator~1pxGHH~18507|)) #f #( #(#f #f 2 src/Build/compile-standard-libraries.sch #(20 1 0) (|\x0;a~1pxGHH~18509| |\x0;b~1pxGHH~18510|)) #|\x0;comparator-compare~1pxGHH~18259|)
 #|\x0;comparator-type-test-procedure~1pxGHH~11494| #|\x0;comparator-equality-predicate~1pxGHH~11482| #|\x0;comparator-hash-function~1pxGHH~11485| #|\x0;make-comparator~1pxGHH~11489|)
 #f #( #(debug-assert #f 3 src/Build/compile-standard-libraries.sch #(20 1 0) (|\x0;bool~1pxGHH~18502| |\x0;who~1pxGHH~18503| |\x0;what~1pxGHH~18504|)) #symbol->string " failure in " #string-append #error)
 #f #( #(debug-deny #f 3 src/Build/compile-standard-libraries.sch #(20 1 0) (|\x0;bool~1pxGHH~18498| |\x0;who~1pxGHH~18499| |\x0;what~1pxGHH~18500|)) #|\x0;debug-assert~1pxGHH~18345|)
 #f #( #(check-type-test #f 2 src/Build/compile-standard-libraries.sch #(20 1 0) (|\x0;comparator~1pxGHH~18493| |\x0;a~1pxGHH~18494|)) #|\x0;comparator-test-type~1pxGHH~11713| type validity #|\x0;debug-assert~1pxGHH~18345|)
 #f #( #(check-reflexive-equality #f 2 src/Build/compile-standard-libraries.sch #(20 1 0) (|\x0;comparator~1pxGHH~18488| |\x0;a~1pxGHH~18489|)) #|\x0;comparator-equal?~1pxGHH~18258| equality reflexive #|\x0;debug-assert~1pxGHH~18345|)
 #f #( #(check-reflexive-comparison #f 2 src/Build/compile-standard-libraries.sch #(20 1 0) (|\x0;comparator~1pxGHH~18483| |\x0;a~1pxGHH~18484|)) #|\x0;comparator-compare~1pxGHH~18259| comparison reflexive #|\x0;debug-assert~1pxGHH~18345|)
 #f #( #(check-symmetric-equality #f 3 src/Build/compile-standard-libraries.sch #(20 1 0) (|\x0;comparator~1pxGHH~18473| |\x0;a~1pxGHH~18474| |\x0;b~1pxGHH~18475|)) #|\x0;comparator-equal?~1pxGHH~18258| equality symmetric #|\x0;debug-assert~1pxGHH~18345| #|\x0;debug-deny~1pxGHH~18346|)
 #f #( #(check-asymmetric-comparison #f 3 src/Build/compile-standard-libraries.sch #(20 1 0) (|\x0;comparator~1pxGHH~18467| |\x0;a~1pxGHH~18468| |\x0;b~1pxGHH~18469|)) #|\x0;comparator-compare~1pxGHH~18259| comparison asymmetric #|\x0;debug-assert~1pxGHH~18345|)
 #f #( #(check-transitive-equality #f 4 src/Build/compile-standard-libraries.sch #(20 1 0) (|\x0;comparator~1pxGHH~18447| |\x0;a~1pxGHH~18448| |\x0;b~1pxGHH~18449| |\x0;c~1pxGHH~18450|)) #|\x0;comparator-equal?~1pxGHH~18258| equality transitive #|\x0;debug-assert~1pxGHH~18345| #|\x0;debug-deny~1pxGHH~18346|)
 #f #( #(check-transitive-comparison #f 4 src/Build/compile-standard-libraries.sch #(20 1 0) (|\x0;comparator~1pxGHH~18408| |\x0;a~1pxGHH~18409| |\x0;b~1pxGHH~18410| |\x0;c~1pxGHH~18411|)) #|\x0;<=?~1pxGHH~11724| comparison transitive #|\x0;debug-assert~1pxGHH~18345|)
 #f #( #(check-hash-value #f 1 src/Build/compile-standard-libraries.sch #(20 1 0) (|\x0;value~1pxGHH~18402|)) #bignum? validity hash-value #|\x0;debug-assert~1pxGHH~18345|)
 #f #( #(check-all #f 5 src/Build/compile-standard-libraries.sch #(20 1 0) (|\x0;comparator~1pxGHH~18387| |\x0;a~1pxGHH~18388| |\x0;b~1pxGHH~18389| |\x0;c~1pxGHH~18390| |\x0;c?~1pxGHH~18391|)) #|\x0;check-type-test~1pxGHH~18347| #|\x0;check-reflexive-equality~1pxGHH~18348| #|\x0;check-reflexive-comparison~1pxGHH~18349| #|\x0;check-symmetric-equality~1pxGHH~18350| #|\x0;check-asymmetric-comparison~1pxGHH~18351| #|\x0;check-transitive-equality~1pxGHH~18352| #|\x0;check-transitive-comparison~1pxGHH~18353|)
 #f #( #(make-debug-comparator #f 1 src/Build/compile-standard-libraries.sch #(20 1 0) (|\x0;comparator~1pxGHH~18358|)) #|\x0;comparator-comparison-procedure?~1pxGHH~11487| #f #( #(#f #f 2 src/Build/compile-standard-libraries.sch #(20 1 0) (|\x0;a~1pxGHH~18364| |\x0;b~1pxGHH~18365|)) #|\x0;check-all~1pxGHH~18355| #|\x0;comparator-equal?~1pxGHH~18258|)
 #|\x0;comparator-type-test-procedure~1pxGHH~11494| #f #( #(#f #f 2 src/Build/compile-standard-libraries.sch #(20 1 0) (|\x0;a~1pxGHH~18373| |\x0;b~1pxGHH~18374|)) #|\x0;check-all~1pxGHH~18355| #|\x0;comparator-compare~1pxGHH~18259|)
 #|\x0;comparator-hash-function?~1pxGHH~11495| #f #( #(#f #f 1 src/Build/compile-standard-libraries.sch #(20 1 0) (|\x0;obj~1pxGHH~18382|)) #|\x0;comparator-hash~1pxGHH~11715| #|\x0;check-hash-value~1pxGHH~18354|)
 #|\x0;make-comparator~1pxGHH~11489|)
 #values)
 (srfi 114 comparators) ((comparator? variable |\x0;comparator?~1pxGHH~11480| (0) #f (srfi 128 kernel)) (comparator-comparison-procedure? variable |\x0;comparator-comparison-procedure?~1pxGHH~11487| (0) #f (srfi 128 kernel)) (comparator-hash-function? variable |\x0;comparator-hash-function?~1pxGHH~11495| (0) #f (srfi 128 kernel)) (boolean-comparator variable |\x0;boolean-comparator~1pxGHH~18279| (0) #f (srfi 114 comparators)) (char-comparator variable |\x0;char-comparator~1pxGHH~18281| (0) #f (srfi 114 comparators)) (char-ci-comparator variable |\x0;char-ci-comparator~1pxGHH~18283| (0) #f (srfi 114 comparators)) (string-comparator variable |\x0;string-comparator~1pxGHH~18307| (0) #f (srfi 114 comparators)) (string-ci-comparator variable |\x0;string-ci-comparator~1pxGHH~18308| (0) #f (srfi 114 comparators)) (symbol-comparator variable |\x0;symbol-comparator~1pxGHH~18309| (0) #f (srfi 114 comparators)) (exact-integer-comparator variable |\x0;exact-integer-comparator~1pxGHH~18295| (0) #f (srfi 114 comparators)) (integer-comparator variable |\x0;integer-comparator~1pxGHH~18294| (0) #f (srfi 114 comparators)) (rational-comparator variable |\x0;rational-comparator~1pxGHH~18293| (0) #f (srfi 114 comparators)) (real-comparator variable |\x0;real-comparator~1pxGHH~18292| (0) #f (srfi 114 comparators)) (complex-comparator variable |\x0;complex-comparator~1pxGHH~18291| (0) #f (srfi 114 comparators)) (number-comparator variable |\x0;number-comparator~1pxGHH~18290| (0) #f (srfi 114 comparators)) (pair-comparator variable |\x0;pair-comparator~1pxGHH~18325| (0) #f (srfi 114 comparators)) (list-comparator variable |\x0;list-comparator~1pxGHH~18312| (0) #f (srfi 114 comparators)) (vector-comparator variable |\x0;vector-comparator~1pxGHH~18313| (0) #f (srfi 114 comparators)) (bytevector-comparator variable |\x0;bytevector-comparator~1pxGHH~18317| (0) #f (srfi 114 comparators)) (default-comparator variable |\x0;default-comparator~1pxGHH~18277| (0) #f (srfi 114 comparators)) (make-comparator variable |\x0;make-comparator~1pxGHH~11489| (0) #f (srfi 128 kernel)) (make-inexact-real-comparator variable |\x0;make-inexact-real-comparator~1pxGHH~18301| (0) #f (srfi 114 comparators)) (make-vector-comparator variable |\x0;make-vector-comparator~1pxGHH~11748| (0) #f (srfi 128)) (make-bytevector-comparator variable |\x0;make-bytevector-comparator~1pxGHH~18316| (0) #f (srfi 114 comparators)) (make-list-comparator variable |\x0;make-list-comparator~1pxGHH~11743| (0) #f (srfi 128)) (make-vectorwise-comparator variable |\x0;make-vectorwise-comparator~1pxGHH~18311| (0) #f (srfi 114 comparators)) (make-listwise-comparator variable |\x0;make-listwise-comparator~1pxGHH~18310| (0) #f (srfi 114 comparators)) (make-car-comparator variable |\x0;make-car-comparator~1pxGHH~18320| (0) #f (srfi 114 comparators)) (make-cdr-comparator variable |\x0;make-cdr-comparator~1pxGHH~18321| (0) #f (srfi 114 comparators)) (make-pair-comparator variable |\x0;make-pair-comparator~1pxGHH~11737| (0) #f (srfi 128)) (make-improper-list-comparator variable |\x0;make-improper-list-comparator~1pxGHH~18330| (0) #f (srfi 114 comparators)) (make-selecting-comparator variable |\x0;make-selecting-comparator~1pxGHH~18339| (0) #f (srfi 114 comparators)) (make-refining-comparator variable |\x0;make-refining-comparator~1pxGHH~18343| (0) #f (srfi 114 comparators)) (make-reverse-comparator variable |\x0;make-reverse-comparator~1pxGHH~18344| (0) #f (srfi 114 comparators)) (make-debug-comparator variable |\x0;make-debug-comparator~1pxGHH~18356| (0) #f (srfi 114 comparators)) (eq-comparator variable |\x0;eq-comparator~1pxGHH~18331| (0) #f (srfi 114 comparators)) (eqv-comparator variable |\x0;eqv-comparator~1pxGHH~18332| (0) #f (srfi 114 comparators)) (equal-comparator variable |\x0;equal-comparator~1pxGHH~18333| (0) #f (srfi 114 comparators)) (comparator-type-test-procedure variable |\x0;comparator-type-test-procedure~1pxGHH~11494| (0) #f (srfi 128 kernel)) (comparator-equality-predicate variable |\x0;comparator-equality-predicate~1pxGHH~11482| (0) #f (srfi 128 kernel)) (comparator-comparison-procedure variable |\x0;comparator-comparison-procedure~1pxGHH~11484| (0) #f (srfi 128 kernel)) (comparator-hash-function variable |\x0;comparator-hash-function~1pxGHH~11485| (0) #f (srfi 128 kernel)) (comparator-test-type variable |\x0;comparator-test-type~1pxGHH~11713| (0) #f (srfi 128)) (comparator-check-type variable |\x0;comparator-check-type~1pxGHH~11714| (0) #f (srfi 128)) (comparator-equal? variable |\x0;comparator-equal?~1pxGHH~18258| (0) #f (srfi 114 comparators)) (comparator-compare variable |\x0;comparator-compare~1pxGHH~18259| (0) #f (srfi 114 comparators)) (comparator-hash variable |\x0;comparator-hash~1pxGHH~11715| (0) #f (srfi 128)) (make-comparison< variable |\x0;make-comparison<~1pxGHH~18260| (0) #f (srfi 114 comparators)) (make-comparison> variable |\x0;make-comparison>~1pxGHH~18261| (0) #f (srfi 114 comparators)) (make-comparison<= variable |\x0;make-comparison<=~1pxGHH~18262| (0) #f (srfi 114 comparators)) (make-comparison>= variable |\x0;make-comparison>=~1pxGHH~18263| (0) #f (srfi 114 comparators)) (make-comparison=/< variable |\x0;make-comparison=/<~1pxGHH~18264| (0) #f (srfi 114 comparators)) (make-comparison=/> variable |\x0;make-comparison=/>~1pxGHH~18265| (0) #f (srfi 114 comparators)) (if3 macro |\x0;if3~1pxGHH~18036| (0) #f (srfi 114 comparators)) (if=? macro |\x0;if=?~1pxGHH~18060| (0) #f (srfi 114 comparators)) (if<? macro |\x0;if<?~1pxGHH~18093| (0) #f (srfi 114 comparators)) (if>? macro |\x0;if>?~1pxGHH~18126| (0) #f (srfi 114 comparators)) (if<=? macro |\x0;if<=?~1pxGHH~18192| (0) #f (srfi 114 comparators)) (if>=? macro |\x0;if>=?~1pxGHH~18225| (0) #f (srfi 114 comparators)) (if-not=? macro |\x0;if-not=?~1pxGHH~18159| (0) #f (srfi 114 comparators)) (=? variable |\x0;=?~1pxGHH~11721| (0) #f (srfi 128)) (<? variable |\x0;<?~1pxGHH~11722| (0) #f (srfi 128)) (>? variable |\x0;>?~1pxGHH~11723| (0) #f (srfi 128)) (<=? variable |\x0;<=?~1pxGHH~11724| (0) #f (srfi 128)) (>=? variable |\x0;>=?~1pxGHH~11725| (0) #f (srfi 128)) (make= variable |\x0;make=~1pxGHH~18266| (0) #f (srfi 114 comparators)) (make< variable |\x0;make<~1pxGHH~18267| (0) #f (srfi 114 comparators)) (make> variable |\x0;make>~1pxGHH~18268| (0) #f (srfi 114 comparators)) (make<= variable |\x0;make<=~1pxGHH~18269| (0) #f (srfi 114 comparators)) (make>= variable |\x0;make>=~1pxGHH~18270| (0) #f (srfi 114 comparators)) (in-open-interval? variable |\x0;in-open-interval?~1pxGHH~18271| (0) #f (srfi 114 comparators)) (in-closed-interval? variable |\x0;in-closed-interval?~1pxGHH~18272| (0) #f (srfi 114 comparators)) (in-open-closed-interval? variable |\x0;in-open-closed-interval?~1pxGHH~18273| (0) #f (srfi 114 comparators)) (in-closed-open-interval? variable |\x0;in-closed-open-interval?~1pxGHH~18274| (0) #f (srfi 114 comparators)) (comparator-min variable |\x0;comparator-min~1pxGHH~18275| (0) #f (srfi 114 comparators)) (comparator-max variable |\x0;comparator-max~1pxGHH~18276| (0) #f (srfi 114 comparators)) (comparator-register-default! variable |\x0;comparator-register-default!~1pxGHH~11757| (0) #f (srfi 128))) (((srfi 128) 0) ((srfi 128 kernel) 0) ((scheme inexact) 0) ((scheme complex) 0) ((scheme case-lambda) 0) ((scheme char) 0) ((scheme base) 0)) (|\x0;build~1pxGHH~12507| |\x0;build~1pxGHH~11612| |\x0;build~1pxGHH~4499| |\x0;build~1pxGHH~4505| |\x0;build~1pxGHH~7216| |\x0;build~1pxGHH~9016| |\x0;build~1pxGHH~4481|) |\x0;build~1pxGHH~19215| #ex:make-library #ex:register-library! #values)
 #f)
))
((.petit-patch-procedure .petit-bootstrap-id-599aa17f2548a310d966819074e97fb7 1
'#(#f #( #f #f #( #(#f #f 0 src/Build/compile-standard-libraries.sch #(20 1 0) ()))
 #f #( #(#f #f 0 src/Build/compile-standard-libraries.sch #(20 1 0) ()) #values)
 #f #( #(#f #f 0 src/Build/compile-standard-libraries.sch #(20 1 0) ()) #values)
 (srfi 114) ((comparator? variable |\x0;comparator?~1pxGHH~11480| (0) #f (srfi 128 kernel)) (comparator-comparison-procedure? variable |\x0;comparator-comparison-procedure?~1pxGHH~11487| (0) #f (srfi 128 kernel)) (comparator-hash-function? variable |\x0;comparator-hash-function?~1pxGHH~11495| (0) #f (srfi 128 kernel)) (boolean-comparator variable |\x0;boolean-comparator~1pxGHH~18279| (0) #f (srfi 114 comparators)) (char-comparator variable |\x0;char-comparator~1pxGHH~18281| (0) #f (srfi 114 comparators)) (char-ci-comparator variable |\x0;char-ci-comparator~1pxGHH~18283| (0) #f (srfi 114 comparators)) (string-comparator variable |\x0;string-comparator~1pxGHH~18307| (0) #f (srfi 114 comparators)) (string-ci-comparator variable |\x0;string-ci-comparator~1pxGHH~18308| (0) #f (srfi 114 comparators)) (symbol-comparator variable |\x0;symbol-comparator~1pxGHH~18309| (0) #f (srfi 114 comparators)) (exact-integer-comparator variable |\x0;exact-integer-comparator~1pxGHH~18295| (0) #f (srfi 114 comparators)) (integer-comparator variable |\x0;integer-comparator~1pxGHH~18294| (0) #f (srfi 114 comparators)) (rational-comparator variable |\x0;rational-comparator~1pxGHH~18293| (0) #f (srfi 114 comparators)) (real-comparator variable |\x0;real-comparator~1pxGHH~18292| (0) #f (srfi 114 comparators)) (complex-comparator variable |\x0;complex-comparator~1pxGHH~18291| (0) #f (srfi 114 comparators)) (number-comparator variable |\x0;number-comparator~1pxGHH~18290| (0) #f (srfi 114 comparators)) (pair-comparator variable |\x0;pair-comparator~1pxGHH~18325| (0) #f (srfi 114 comparators)) (list-comparator variable |\x0;list-comparator~1pxGHH~18312| (0) #f (srfi 114 comparators)) (vector-comparator variable |\x0;vector-comparator~1pxGHH~18313| (0) #f (srfi 114 comparators)) (bytevector-comparator variable |\x0;bytevector-comparator~1pxGHH~18317| (0) #f (srfi 114 comparators)) (default-comparator variable |\x0;default-comparator~1pxGHH~18277| (0) #f (srfi 114 comparators)) (make-comparator variable |\x0;make-comparator~1pxGHH~11489| (0) #f (srfi 128 kernel)) (make-inexact-real-comparator variable |\x0;make-inexact-real-comparator~1pxGHH~18301| (0) #f (srfi 114 comparators)) (make-vector-comparator variable |\x0;make-vector-comparator~1pxGHH~11748| (0) #f (srfi 128)) (make-bytevector-comparator variable |\x0;make-bytevector-comparator~1pxGHH~18316| (0) #f (srfi 114 comparators)) (make-list-comparator variable |\x0;make-list-comparator~1pxGHH~11743| (0) #f (srfi 128)) (make-vectorwise-comparator variable |\x0;make-vectorwise-comparator~1pxGHH~18311| (0) #f (srfi 114 comparators)) (make-listwise-comparator variable |\x0;make-listwise-comparator~1pxGHH~18310| (0) #f (srfi 114 comparators)) (make-car-comparator variable |\x0;make-car-comparator~1pxGHH~18320| (0) #f (srfi 114 comparators)) (make-cdr-comparator variable |\x0;make-cdr-comparator~1pxGHH~18321| (0) #f (srfi 114 comparators)) (make-pair-comparator variable |\x0;make-pair-comparator~1pxGHH~11737| (0) #f (srfi 128)) (make-improper-list-comparator variable |\x0;make-improper-list-comparator~1pxGHH~18330| (0) #f (srfi 114 comparators)) (make-selecting-comparator variable |\x0;make-selecting-comparator~1pxGHH~18339| (0) #f (srfi 114 comparators)) (make-refining-comparator variable |\x0;make-refining-comparator~1pxGHH~18343| (0) #f (srfi 114 comparators)) (make-reverse-comparator variable |\x0;make-reverse-comparator~1pxGHH~18344| (0) #f (srfi 114 comparators)) (make-debug-comparator variable |\x0;make-debug-comparator~1pxGHH~18356| (0) #f (srfi 114 comparators)) (eq-comparator variable |\x0;eq-comparator~1pxGHH~18331| (0) #f (srfi 114 comparators)) (eqv-comparator variable |\x0;eqv-comparator~1pxGHH~18332| (0) #f (srfi 114 comparators)) (equal-comparator variable |\x0;equal-comparator~1pxGHH~18333| (0) #f (srfi 114 comparators)) (comparator-type-test-procedure variable |\x0;comparator-type-test-procedure~1pxGHH~11494| (0) #f (srfi 128 kernel)) (comparator-equality-predicate variable |\x0;comparator-equality-predicate~1pxGHH~11482| (0) #f (srfi 128 kernel)) (comparator-comparison-procedure variable |\x0;comparator-comparison-procedure~1pxGHH~11484| (0) #f (srfi 128 kernel)) (comparator-hash-function variable |\x0;comparator-hash-function~1pxGHH~11485| (0) #f (srfi 128 kernel)) (comparator-test-type variable |\x0;comparator-test-type~1pxGHH~11713| (0) #f (srfi 128)) (comparator-check-type variable |\x0;comparator-check-type~1pxGHH~11714| (0) #f (srfi 128)) (comparator-equal? variable |\x0;comparator-equal?~1pxGHH~18258| (0) #f (srfi 114 comparators)) (comparator-compare variable |\x0;comparator-compare~1pxGHH~18259| (0) #f (srfi 114 comparators)) (comparator-hash variable |\x0;comparator-hash~1pxGHH~11715| (0) #f (srfi 128)) (make-comparison< variable |\x0;make-comparison<~1pxGHH~18260| (0) #f (srfi 114 comparators)) (make-comparison> variable |\x0;make-comparison>~1pxGHH~18261| (0) #f (srfi 114 comparators)) (make-comparison<= variable |\x0;make-comparison<=~1pxGHH~18262| (0) #f (srfi 114 comparators)) (make-comparison>= variable |\x0;make-comparison>=~1pxGHH~18263| (0) #f (srfi 114 comparators)) (make-comparison=/< variable |\x0;make-comparison=/<~1pxGHH~18264| (0) #f (srfi 114 comparators)) (make-comparison=/> variable |\x0;make-comparison=/>~1pxGHH~18265| (0) #f (srfi 114 comparators)) (if3 macro |\x0;if3~1pxGHH~18036| (0) #f (srfi 114 comparators)) (if=? macro |\x0;if=?~1pxGHH~18060| (0) #f (srfi 114 comparators)) (if<? macro |\x0;if<?~1pxGHH~18093| (0) #f (srfi 114 comparators)) (if>? macro |\x0;if>?~1pxGHH~18126| (0) #f (srfi 114 comparators)) (if<=? macro |\x0;if<=?~1pxGHH~18192| (0) #f (srfi 114 comparators)) (if>=? macro |\x0;if>=?~1pxGHH~18225| (0) #f (srfi 114 comparators)) (if-not=? macro |\x0;if-not=?~1pxGHH~18159| (0) #f (srfi 114 comparators)) (=? variable |\x0;=?~1pxGHH~11721| (0) #f (srfi 128)) (<? variable |\x0;<?~1pxGHH~11722| (0) #f (srfi 128)) (>? variable |\x0;>?~1pxGHH~11723| (0) #f (srfi 128)) (<=? variable |\x0;<=?~1pxGHH~11724| (0) #f (srfi 128)) (>=? variable |\x0;>=?~1pxGHH~11725| (0) #f (srfi 128)) (make= variable |\x0;make=~1pxGHH~18266| (0) #f (srfi 114 comparators)) (make< variable |\x0;make<~1pxGHH~18267| (0) #f (srfi 114 comparators)) (make> variable |\x0;make>~1pxGHH~18268| (0) #f (srfi 114 comparators)) (make<= variable |\x0;make<=~1pxGHH~18269| (0) #f (srfi 114 comparators)) (make>= variable |\x0;make>=~1pxGHH~18270| (0) #f (srfi 114 comparators)) (in-open-interval? variable |\x0;in-open-interval?~1pxGHH~18271| (0) #f (srfi 114 comparators)) (in-closed-interval? variable |\x0;in-closed-interval?~1pxGHH~18272| (0) #f (srfi 114 comparators)) (in-open-closed-interval? variable |\x0;in-open-closed-interval?~1pxGHH~18273| (0) #f (srfi 114 comparators)) (in-closed-open-interval? variable |\x0;in-closed-open-interval?~1pxGHH~18274| (0) #f (srfi 114 comparators)) (comparator-min variable |\x0;comparator-min~1pxGHH~18275| (0) #f (srfi 114 comparators)) (comparator-max variable |\x0;comparator-max~1pxGHH~18276| (0) #f (srfi 114 comparators)) (comparator-register-default! variable |\x0;comparator-register-default!~1pxGHH~11757| (0) #f (srfi 128))) (((srfi 114 comparators) 0)) (|\x0;build~1pxGHH~19215|) |\x0;build~1pxGHH~19216| #ex:make-library #ex:register-library! #values)
 #f)
))
